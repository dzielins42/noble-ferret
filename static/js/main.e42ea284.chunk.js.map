{"version":3,"sources":["model/Crest.tsx","geometry/Point.tsx","geometry/Rectangle.tsx","MathUtils.tsx","model/escutcheon/Escutcheon.tsx","model/escutcheon/HeaterEscutcheon.tsx","model/ordinary/Ordinary.tsx","model/texture/VariationTexture.tsx","CrestPalette.tsx","CrestPaletteContext.tsx","model/field/DividedField.tsx","model/field/SolidField.tsx","model/texture/Tincture.tsx","util/Hooks.tsx","ui/TinctureToolsPanel.tsx","ui/TextureToolsPanel.tsx","ui/FieldToolsPanel.tsx","model/escutcheon/CircleEscutcheon.tsx","model/escutcheon/RectangleEscutcheon.tsx","ui/EscutcheonToolsPanel.tsx","model/LozengeType.tsx","CrestRenderer.tsx","model/texture/BlankTexture.tsx","ContextPathDrawer.tsx","PlainCrestRenderer.tsx","CrestPreview.tsx","util/Visitor.tsx","ui/OrdinaryToolsPanel.tsx","ui/OrdinariesToolsPanel.tsx","CrestEditor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Crest","field","ordinaries","this","visitor","visitCrest","Point","x","y","other","Math","sqrt","abs","a","b","Rectangle","top","left","bottom","right","width","height","centerHorizontal","centerVertical","linearP","p1","p2","slope","f","atan","Escutcheon","T","dexter","chief","between","sinister","base","middleChief","fessPoint","honourPoint","dexterChief","sinisterBase","sinisterChief","dexterBase","bounds","max","min","HeaterEscutcheon","unitSize","P","visitHeaterEscutcheon","Ordinary","texture","charges","Pale","visitPale","Fess","visitFess","Cross","visitCross","Bend","visitBend","Saltire","visitSaltire","ParameterizedTwoPartVariationTexture","tincture1","tincture2","count","Barry","visitBarry","Paly","visitPaly","Bendy","visitBendy","Chequy","visitChequy","Lozengy","visitLozengy","Fusilly","visitFusilly","Ruste","visitRuste","CrestPalette","values","or","argent","gules","sable","azure","vert","purple","floor","random","length","PastelCrestPalette","CrestPaletteContext","React","createContext","DividedField","TwoPartDividedField","texture1","texture2","ThreePartDividedField","texture3","PerFessDividedField","visitPerFessDividedField","PerPaleDividedField","visitPerPaleDividedField","PerBendDividedField","visitPerBendDividedField","PerSaltireDividedField","visitPerSaltireDividedField","PerCrossDividedField","visitPerCrossDividedField","PerChevronDividedField","inverted","visitPerChevronDividedField","PerPallDividedField","visitPerPallDividedField","SolidField","visitSolidField","randomTincture","OrTincture","ArgentTincture","GulesTincture","SableTincture","AzureTincture","VertTincture","PurpleTincture","StandardTinctureType","StandardTincture","type","visitStandardTincture","palette","OR","ARGENT","GULES","SABLE","AZURE","VERT","PURPLE","useNonInitialEffect","effect","deps","initialRender","useRef","useEffect","effectReturns","current","TinctureToolsPanel","props","useContext","classes","useStyles","useState","tincture","undefined","setTincture","onChange","options","label","map","option","ToggleButton","size","selected","className","tinctureItem","TinctureSample","crestPalette","theme","useTheme","hex","tinctureVisitor","standardTincture","getColorHex","accept","Paper","variant","elevation","style","spacing","backgroundColor","MultiTinctureToolsPanel","tinctures","tincturePanels","i","push","newTinctures","Divider","TextureToolsPanel","setTexture","parameter","factoryFunc","getOptions","minCount","barry","paly","bendy","chequy","lozengy","fusilly","ruste","getTinctures","result","getParameter","selectedValue","findIndex","_","isEqual","content","func","contentVisitor","onTincturesChange","onParameterChange","getContent","FormControl","InputLabel","htmlFor","Select","native","value","event","target","inputProps","id","index","ParameterizedTwoPartVariationTextureToolsPanel","TextField","parseInt","InputLabelProps","shrink","FieldToolsPanel","setField","textures","getTextures","withLabels","MultiTextureToolsPanel","panels","Accordion","AccordionSummary","expandIcon","Typography","AccordionDetails","toolsPanel","newTextures","CircleEscutcheon","r","visitCircleEscutcheon","RectangleEscutcheon","w","h","visitRectangleEscutcheon","EscutcheonToolsPanel","escutcheon","setEscutcheon","aria-label","LozengeType","CrestRenderer","viewportWidth","viewportHeight","console","log","visitable","BlankTexture","ContextPathDrawer","context","beginPath","moveTo","lineTo","arc","PI","closePath","center","PlainCrestRenderer","CONTENT_TO_SPACE_RATIO","crest","offsetX","offsetY","clipFunc","ctx","draw","renderSelf","ordinary","sceneFunc","shape","fillStrokeShape","stroke","strokeWidth","solidField","clipX","clipY","clipWidth","clipHeight","startPoint","endPoint","fun","fun1","fun2","bendFunction","bendSinisterFunction","perPale","perChevron","rect","dimen","SQRT2","t","rotation","d","rowCount","ceil","colCount","row","col","innerRenderLozengy","dRatio","p","q","Normal","hCount","vCount","v","translate","Mascle","pale","chargesCount","assertChargesCount","paleWidth","totalHeight","middleBase","chargeHeight","renderInPale","fess","fessHeight","totalWidth","chargeWidth","renderInFess","cross","halfDimen","chargeDimen","renderInCross","bend","hor","chargesRect","chargeSize","diagonal","renderInBend","save","rotate","restore","saltire","q1","q2","distanceX","distanceY","renderInSaltire","startPadding","endPadding","spacersCount","spacerHeight","error","spacerWidth","points","point","chargeDiagonal","dX","dY","spacerDiagonal","inFess","inPale","inBend","roundel","billet","lozenge","dimen1","ratio","dimen2","mullet","step","cos","sin","pierced","fill","warn","renderer","render","CrestPreview","forwardRef","ref","containerRef","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","windowWidth","canvasSize","setCanvasSize","viewportSize","parentWidth","offsetWidth","scale","CloneOrdinaryVisitor","OrdinaryToolsPanel","setOrdinary","galleryOpen","setGalleryOpen","handleCloseGallery","Button","onClick","clonedOrdinary","clone","Dialog","open","onClose","scroll","DialogTitle","DialogContent","dividers","display","flexFlow","justifyContent","DialogActions","color","GalleryItem","GridListTile","margin","component","src","GridListTileBar","title","OrdinariesToolsPanel","setOrdinaries","selectedIndex","setSelectedIndex","listItems","ListItem","button","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","newOrdinaries","splice","handleDelete","List","ListItemIcon","flexGrow","newOrdinary","handleAdd","makeStyles","createStyles","root","paper","padding","textAlign","text","secondary","flexDirection","marginTop","marginBottom","minWidth","alignItems","CrestEditor","setCrest","stageRef","createRef","Container","Provider","Grid","container","item","xs","ButtonGroup","disabled","uri","toDataURL","link","document","createElement","download","href","body","appendChild","click","removeChild","handleExport","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e42ea284.chunk.js","sourcesContent":["import { CrestVisitor, Visitable } from \"../util/Visitor\"\nimport Field from \"./field/Field\"\nimport { Ordinary } from \"./ordinary/Ordinary\"\n\nclass Crest implements Visitable<CrestVisitor> {\n  readonly field: Field\n  readonly ordinaries: Ordinary[]\n\n  constructor(\n    field: Field,\n    ordinaries: Ordinary[] = []\n  ) {\n    this.field = field\n    this.ordinaries = ordinaries\n  }\n\n  accept(visitor: CrestVisitor): void {\n    visitor.visitCrest(this)\n  }\n}\n\nexport default Crest\n","class Point {\n  readonly x: number\n  readonly y: number\n\n  constructor(\n    x: number,\n    y: number\n  ) {\n    this.x = x\n    this.y = y\n  }\n\n  static between(a: Point, b: Point): Point {\n    return new Point(\n      (a.x + b.x) / 2,\n      (a.y + b.y) / 2\n    )\n  }\n\n  distance(other: Point): number {\n    return Math.sqrt(\n      (this.x - other.x) * (this.x - other.x)\n      +\n      (this.y - other.y) * (this.y - other.y)\n    )\n  }\n\n  distanceX(other: Point): number {\n    return Math.abs(this.x - other.x)\n  }\n\n  distanceY(other: Point): number {\n    return Math.abs(this.y - other.y)\n  }\n}\n\nexport default Point\n","import Point from \"./Point\"\n\nclass Rectangle {\n  readonly top: number\n  readonly left: number\n  readonly bottom: number\n  readonly right: number\n\n  constructor(\n    top: number,\n    left: number,\n    bottom: number,\n    right: number\n  ) {\n    this.top = top\n    this.left = left\n    this.bottom = bottom\n    this.right = right\n  }\n\n  get width(): number {\n    return this.right - this.left\n  }\n\n  get height(): number {\n    return this.bottom - this.top\n  }\n\n  get centerHorizontal(): number {\n    return this.left + this.width / 2\n  }\n\n  get centerVertical(): number {\n    return this.top + this.height / 2\n  }\n\n  get center(): Point {\n    return new Point(\n      this.centerHorizontal,\n      this.centerVertical\n    )\n  }\n\n  get diagonal(): number {\n    return Math.sqrt(\n      this.height * this.height\n      +\n      this.width * this.width\n    )\n  }\n}\n\nexport default Rectangle\n","import Point from \"./geometry/Point\"\n\nexport const linear = (x1: number, y1: number, x2: number, y2: number) => {\n  const a = (y2 - y1) / (x2 - x1)\n  const b = y1 - x1 * a\n  return function(x: number) {\n    return x * a + b\n  }\n}\n\nexport const linearP = (p1: Point, p2: Point) => {\n  const a = (p2.y - p1.y) / (p2.x - p1.x)\n  const b = p1.y - p1.x * a\n  return function(x: number) {\n    return x * a + b\n  }\n}\n\nexport const slope = (f: (arg: number) => number) => {\n  const b = f(0)\n  const a = (f(1) - b) / 1\n  return Math.atan(a)\n}\n","import Point from \"../../geometry/Point\"\nimport Rectangle from \"../../geometry/Rectangle\"\nimport { linearP } from \"../../MathUtils\"\nimport { EscutcheonVisitor, Visitable } from \"../../util/Visitor\"\n\nabstract class Escutcheon implements Visitable<EscutcheonVisitor> {\n\n  abstract get chief(): Point\n  abstract get dexter(): Point\n  abstract get sinister(): Point\n  abstract get base(): Point\n\n  get dexterChief(): Point {\n    return new Point(\n      this.dexter.x,\n      this.chief.y\n    )\n  }\n\n  get middleChief(): Point {\n    return new Point(\n      Point.between(this.dexter, this.sinister).x,\n      this.chief.y\n    )\n  }\n\n  get middleBase(): Point {\n    return new Point(\n      Point.between(this.dexter, this.sinister).x,\n      this.base.y\n    )\n  }\n\n  get sinisterChief(): Point {\n    return new Point(this.sinister.x, this.chief.y)\n  }\n\n  get honourPoint(): Point {\n    return Point.between(\n      this.middleChief,\n      this.fessPoint\n    )\n  }\n\n  get fessPoint(): Point {\n    return new Point(\n      Point.between(this.dexter, this.sinister).x,\n      Point.between(this.chief, this.base).y\n    )\n  }\n\n  get nombrilPoint(): Point {\n    return new Point(\n      Point.between(this.dexter, this.sinister).x,\n      Point.between(this.honourPoint, this.base).y\n    )\n  }\n\n  get dexterBase(): Point {\n    return new Point(\n      this.dexter.x,\n      this.base.y\n    )\n  }\n\n  get sinisterBase(): Point {\n    return new Point(\n      this.sinister.x,\n      this.base.y\n    )\n  }\n\n  get bounds(): Rectangle {\n    return new Rectangle(\n      this.chief.y,\n      this.dexter.x,\n      this.base.y,\n      this.sinister.x\n    )\n  }\n\n  get bendFunction() {\n    return linearP(\n      this.dexterChief, this.sinisterBase\n    )\n  }\n\n  get bendSinisterFunction() {\n    return linearP(\n      this.sinisterChief, this.dexterBase\n    )\n  }\n\n  get fessHeight(): number {\n    return this.bounds.height * this.T\n  }\n\n  get paleWidth(): number {\n    return this.bounds.width * this.T\n  }\n\n  get mainLocation(): Rectangle {\n    const top = Math.max(this.dexterChief.y, this.sinisterChief.y)\n    const left = Math.max(this.dexterBase.x, this.dexterChief.x)\n    const bottom = Math.min(this.dexterBase.y, this.sinisterBase.y)\n    const right = Math.min(this.sinisterBase.x, this.sinisterChief.x)\n    return new Rectangle(top, left, bottom, right)\n  }\n\n  private readonly T: number = 0.25\n\n  abstract accept(visitor: EscutcheonVisitor): void\n}\n\nexport default Escutcheon\n","import Point from \"../../geometry/Point\";\nimport { EscutcheonVisitor } from \"../../util/Visitor\";\nimport Escutcheon from \"./Escutcheon\";\n\nclass HeaterEscutcheon extends Escutcheon {\n  constructor(\n    private readonly unitSize: number\n  ) {\n    super()\n  }\n\n  get chief(): Point {\n    return new Point(\n      1.5 * this.unitSize,\n      0\n    )\n  }\n  get dexter(): Point {\n    return new Point(\n      0,\n      2 * this.unitSize\n    )\n  }\n  get sinister(): Point {\n    return new Point(\n      3 * this.unitSize,\n      2 * this.unitSize\n    )\n  }\n  get base(): Point {\n    return new Point(\n      1.5 * this.unitSize,\n      (1 + Math.sqrt(6.75)) * this.unitSize\n    )\n  }\n  get dexterBase(): Point {\n    return new Point(\n      // Exact point\n      (3 - this.P) * this.unitSize,\n      (this.P) * this.unitSize\n      // Simple point\n      //this.x,\n      //this.y + 3 * this.unitSize\n    )\n  }\n  get sinisterBase(): Point {\n    return new Point(\n      // Exact point\n      (this.P) * this.unitSize,\n      (this.P) * this.unitSize\n      // Simple point\n      //this.x + 3 * this.unitSize,\n      //this.y + 3 * this.unitSize\n    )\n  }\n  get fessPoint(): Point {\n    return new Point(\n      1.5 * this.unitSize,\n      1.5 * this.unitSize,\n    )\n  }\n\n  private readonly P = (2 + Math.sqrt(68)) / 4\n\n  accept(visitor: EscutcheonVisitor): void {\n    visitor.visitHeaterEscutcheon(this)\n  }\n}\n\nexport default HeaterEscutcheon\n","import { OrdinaryVisitor, Visitable } from \"../../util/Visitor\"\nimport { Charge } from \"../charge/Charge\"\nimport Texture from \"../texture/Texture\"\n\nexport abstract class Ordinary implements Visitable<OrdinaryVisitor> {\n  constructor(\n    readonly texture: Texture,\n    readonly charges: Charge[] = []\n  ) { }\n\n  abstract accept(visitor: OrdinaryVisitor): void\n}\n\nexport class Pale extends Ordinary {\n  accept(visitor: OrdinaryVisitor): void {\n    visitor.visitPale(this)\n  }\n}\n\nexport class Fess extends Ordinary {\n  accept(visitor: OrdinaryVisitor): void {\n    visitor.visitFess(this)\n  }\n}\n\nexport class Cross extends Ordinary {\n  accept(visitor: OrdinaryVisitor): void {\n    visitor.visitCross(this)\n  }\n}\n\nexport class Bend extends Ordinary {\n  readonly sinister: boolean\n\n  constructor(\n    texture: Texture,\n    charges: Charge[] = [],\n    sinister: boolean = false\n  ) {\n    super(texture, charges)\n    this.sinister = sinister\n  }\n\n  accept(visitor: OrdinaryVisitor): void {\n    visitor.visitBend(this)\n  }\n}\n\nexport class Saltire extends Ordinary {\n  accept(visitor: OrdinaryVisitor): void {\n    visitor.visitSaltire(this)\n  }\n}\n","import { TextureVisitor } from \"../../util/Visitor\";\nimport Texture from \"./Texture\";\nimport { Tincture } from \"./Tincture\";\n\nabstract class VariationTexture implements Texture {\n  abstract accept(visitor: TextureVisitor): void\n}\n\nabstract class TwoPartVariationTexture extends VariationTexture {\n  readonly tincture1: Tincture\n  readonly tincture2: Tincture\n\n  constructor(\n    tincture1: Tincture,\n    tincture2: Tincture\n  ) {\n    super()\n    this.tincture1 = tincture1\n    this.tincture2 = tincture2\n  }\n}\n\nexport abstract class ParameterizedTwoPartVariationTexture extends TwoPartVariationTexture {\n  readonly count: number\n\n  constructor(\n    tincture1: Tincture,\n    tincture2: Tincture,\n    count: number = 6\n  ) {\n    super(tincture1, tincture2)\n    this.count = count\n  }\n}\n\nexport class Barry extends ParameterizedTwoPartVariationTexture {\n  accept(visitor: TextureVisitor): void {\n    visitor.visitBarry(this)\n  }\n}\n\nexport class Paly extends ParameterizedTwoPartVariationTexture {\n  accept(visitor: TextureVisitor): void {\n    visitor.visitPaly(this)\n  }\n}\n\nexport class Bendy extends ParameterizedTwoPartVariationTexture {\n  readonly sinister: boolean\n\n  constructor(\n    tincture1: Tincture,\n    tincture2: Tincture,\n    count: number = 3,\n    sinister: boolean = false\n  ) {\n    super(tincture1, tincture2, count)\n    this.sinister = sinister\n  }\n\n  accept(visitor: TextureVisitor): void {\n    visitor.visitBendy(this)\n  }\n}\n\n\nexport class Chequy extends ParameterizedTwoPartVariationTexture {\n  accept(visitor: TextureVisitor): void {\n    visitor.visitChequy(this)\n  }\n}\n\nexport class Lozengy extends ParameterizedTwoPartVariationTexture {\n  accept(visitor: TextureVisitor): void {\n    visitor.visitLozengy(this)\n  }\n}\n\nexport class Fusilly extends ParameterizedTwoPartVariationTexture {\n  accept(visitor: TextureVisitor): void {\n    visitor.visitFusilly(this)\n  }\n}\n\nexport class Ruste extends ParameterizedTwoPartVariationTexture {\n  accept(visitor: TextureVisitor): void {\n    visitor.visitRuste(this)\n  }\n}\n","abstract class CrestPalette {\n  abstract get or(): string\n  abstract get argent(): string\n\n  abstract get gules(): string\n  abstract get sable(): string\n  abstract get azure(): string\n  abstract get vert(): string\n  abstract get purple(): string\n\n  random(): string {\n    const values: string[] = [\n      this.or,\n      this.argent,\n      this.gules,\n      this.sable,\n      this.azure,\n      this.vert,\n      this.purple\n    ]\n    return values[Math.floor(Math.random() * values.length)]\n  }\n\n  randomColor(): string {\n    const values: string[] = [\n      this.gules,\n      this.sable,\n      this.azure,\n      this.vert,\n      this.purple\n    ]\n    return values[Math.floor(Math.random() * values.length)]\n  }\n}\n\nexport class PastelCrestPalette extends CrestPalette {\n  or: string = \"#ffffba\"\n  argent: string = \"#ffffff\"\n  gules: string = \"#ffb3ba\"\n  sable: string = \"#000000\"\n  azure: string = \"#bae1ff\"\n  vert: string = \"#baffc9\"\n  purple: string = \"#8675a9\"\n}\n\nexport default CrestPalette\n","import React from \"react\";\nimport { PastelCrestPalette } from \"./CrestPalette\";\n\nexport const CrestPaletteContext = React.createContext(\n  new PastelCrestPalette()\n)\n","import { FieldVisitor } from \"../../util/Visitor\";\nimport Texture from \"../texture/Texture\";\nimport Field from \"./Field\";\n\nabstract class DividedField implements Field {\n  abstract accept(visitor: FieldVisitor): void\n}\n\nabstract class TwoPartDividedField extends DividedField {\n  readonly texture1: Texture\n  readonly texture2: Texture\n\n  constructor(texture1: Texture, texture2: Texture) {\n    super()\n    this.texture1 = texture1\n    this.texture2 = texture2\n  }\n}\n\nabstract class ThreePartDividedField extends DividedField {\n  readonly texture1: Texture\n  readonly texture2: Texture\n  readonly texture3: Texture\n\n  constructor(\n    texture1: Texture,\n    texture2: Texture,\n    texture3: Texture\n  ) {\n    super()\n    this.texture1 = texture1\n    this.texture2 = texture2\n    this.texture3 = texture3\n  }\n}\n\nexport class PerFessDividedField extends TwoPartDividedField {\n  accept(visitor: FieldVisitor): void {\n    visitor.visitPerFessDividedField(this)\n  }\n}\n\nexport class PerPaleDividedField extends TwoPartDividedField {\n  accept(visitor: FieldVisitor): void {\n    visitor.visitPerPaleDividedField(this)\n  }\n}\n\nexport class PerBendDividedField extends TwoPartDividedField {\n  readonly sinister: boolean\n\n  constructor(\n    texture1: Texture,\n    texture2: Texture,\n    sinister: boolean = false\n  ) {\n    super(texture1, texture2)\n    this.sinister = sinister\n  }\n\n  accept(visitor: FieldVisitor): void {\n    visitor.visitPerBendDividedField(this)\n  }\n}\n\nexport class PerSaltireDividedField extends TwoPartDividedField {\n  accept(visitor: FieldVisitor): void {\n    visitor.visitPerSaltireDividedField(this)\n  }\n}\n\nexport class PerCrossDividedField extends TwoPartDividedField {\n  accept(visitor: FieldVisitor): void {\n    visitor.visitPerCrossDividedField(this)\n  }\n}\n\nexport class PerChevronDividedField extends TwoPartDividedField {\n  readonly inverted: boolean\n\n  constructor(\n    texture1: Texture,\n    texture2: Texture,\n    inverted: boolean = false\n  ) {\n    super(texture1, texture2)\n    this.inverted = inverted\n  }\n\n  accept(visitor: FieldVisitor): void {\n    visitor.visitPerChevronDividedField(this)\n  }\n}\n\nexport class PerPallDividedField extends ThreePartDividedField {\n  readonly inverted: boolean\n\n  constructor(\n    texture1: Texture,\n    texture2: Texture,\n    texture3: Texture,\n    inverted: boolean = false\n  ) {\n    super(texture1, texture2, texture3)\n    this.inverted = inverted\n  }\n\n  accept(visitor: FieldVisitor): void {\n    visitor.visitPerPallDividedField(this)\n  }\n}\n","import { FieldVisitor } from '../../util/Visitor'\nimport Texture from '../texture/Texture'\nimport Field from './Field'\n\nclass SolidField implements Field {\n  readonly texture: Texture\n\n  constructor(texture: Texture) {\n    this.texture = texture\n  }\n\n  accept(visitor: FieldVisitor): void {\n    visitor.visitSolidField(this)\n  }\n}\n\n\nexport default SolidField\n","import CrestPalette from '../../CrestPalette'\nimport { TinctureVisitor, Visitable } from '../../util/Visitor'\nimport Texture from './Texture'\n\nexport interface Tincture extends Texture { }\n\nexport function randomTincture(): Tincture {\n  const values: Tincture[] = [\n    OrTincture,\n    ArgentTincture,\n    GulesTincture,\n    SableTincture,\n    AzureTincture,\n    VertTincture,\n    PurpleTincture,\n  ]\n\n  return values[Math.floor(Math.random() * values.length)]\n}\n\nexport class StandardTincture implements Tincture {\n  constructor(readonly type: StandardTinctureType) { }\n\n  accept(visitor: TinctureVisitor): void {\n    visitor.visitStandardTincture(this)\n  }\n\n  getColorHex(palette: CrestPalette): string {\n    switch (this.type) {\n      case StandardTinctureType.OR:\n        return palette.or\n      case StandardTinctureType.ARGENT:\n        return palette.argent\n      case StandardTinctureType.GULES:\n        return palette.gules\n      case StandardTinctureType.SABLE:\n        return palette.sable\n      case StandardTinctureType.AZURE:\n        return palette.azure\n      case StandardTinctureType.VERT:\n        return palette.vert\n      case StandardTinctureType.PURPLE:\n        return palette.purple\n    }\n  }\n}\n\nenum StandardTinctureType {\n  // Metals\n  OR, ARGENT,\n  // Colors\n  GULES, SABLE, AZURE, VERT, PURPLE\n}\n\nexport const OrTincture =\n  new StandardTincture(StandardTinctureType.OR)\nexport const ArgentTincture =\n  new StandardTincture(StandardTinctureType.ARGENT)\nexport const GulesTincture =\n  new StandardTincture(StandardTinctureType.GULES)\nexport const SableTincture =\n  new StandardTincture(StandardTinctureType.SABLE)\nexport const AzureTincture =\n  new StandardTincture(StandardTinctureType.AZURE)\nexport const VertTincture =\n  new StandardTincture(StandardTinctureType.VERT)\nexport const PurpleTincture =\n  new StandardTincture(StandardTinctureType.PURPLE)\n","import { DependencyList, EffectCallback, useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\nexport const useNonInitialEffect = (\n  effect: EffectCallback,\n  deps?: DependencyList\n) => {\n  const initialRender = useRef(true);\n\n  useEffect(() => {\n    let effectReturns: void | (() => void | undefined) = () => { };\n\n    if (initialRender.current) {\n      initialRender.current = false;\n    } else {\n      effectReturns = effect();\n    }\n\n    if (effectReturns && typeof effectReturns === \"function\") {\n      return effectReturns;\n    }\n  }, deps);\n};\n\nexport const useWindowSize = () => {\n  const [size, setSize] = useState([0, 0])\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight])\n    }\n    window.addEventListener('resize', updateSize)\n    updateSize()\n    return () => window.removeEventListener('resize', updateSize)\n  }, [])\n\n  return size\n}\n","import { Divider, Paper, useTheme } from \"@material-ui/core\"\nimport { ToggleButton } from \"@material-ui/lab\"\nimport React, { useState } from \"react\"\nimport { useStyles } from \"../CrestEditor\"\nimport { CrestPaletteContext } from \"../CrestPaletteContext\"\nimport { ArgentTincture, AzureTincture, GulesTincture, OrTincture, PurpleTincture, randomTincture, SableTincture, StandardTincture, Tincture, VertTincture } from \"../model/texture/Tincture\"\nimport { useNonInitialEffect } from \"../util/Hooks\"\nimport { TinctureVisitor } from \"../util/Visitor\"\n\ntype TinctureToolsPanelProps = {\n  tincture?: Tincture\n  onChange?: (tincture: Tincture) => void\n}\n\ntype MultiTinctureToolsPanelProps = {\n  tinctures: Tincture[]\n  onChange?: (tinctures: Tincture[]) => void\n}\n\ntype TinctureOption = {\n  label: string,\n  tincture: Tincture,\n}\n\nexport const TinctureToolsPanel = (props: TinctureToolsPanelProps) => {\n  const crestPalette = React.useContext(CrestPaletteContext)\n  const classes = useStyles()\n\n  const [tincture, setTincture] = useState<Tincture>(() => {\n    if (props.tincture === null || props.tincture === undefined) {\n      return randomTincture()\n    } else {\n      return props.tincture!\n    }\n  })\n\n  useNonInitialEffect(() => {\n    props.onChange ?.(tincture)\n  }, [tincture])\n\n  const options: TinctureOption[] = [\n    { label: \"Or\", tincture: OrTincture },\n    { label: \"Argent\", tincture: ArgentTincture },\n    { label: \"Gules\", tincture: GulesTincture },\n    { label: \"Sable\", tincture: SableTincture },\n    { label: \"Azure\", tincture: AzureTincture },\n    { label: \"Vert\", tincture: VertTincture },\n    { label: \"Purple\", tincture: PurpleTincture },\n  ]\n\n  return (\n    <>\n      <div>\n        {options.map((option) => {\n          return (\n            <ToggleButton\n              size=\"small\"\n              selected={option.tincture === tincture}\n              className={classes.tinctureItem}\n              onChange={() => {\n                setTincture(option.tincture)\n              }}\n            >\n              <div>\n                <TinctureSample tincture={option.tincture} />\n                {option.label}\n              </div>\n            </ToggleButton>\n          )\n        })}\n      </div>\n    </>\n  )\n}\n\ntype TinctureSampleProps = {\n  tincture: Tincture\n}\n\nexport const TinctureSample = (props: TinctureSampleProps) => {\n  const crestPalette = React.useContext(CrestPaletteContext)\n  const theme = useTheme()\n\n  let hex = \"#000000\"\n  const tinctureVisitor: TinctureVisitor = {\n    visitStandardTincture: (standardTincture: StandardTincture) => {\n      hex = standardTincture.getColorHex(crestPalette)\n    },\n  }\n  props.tincture.accept(tinctureVisitor)\n\n  return (\n    <Paper\n      variant=\"outlined\"\n      elevation={0}\n      style={{\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        backgroundColor: hex\n      }}\n    />\n  )\n}\n\nexport const MultiTinctureToolsPanel = (props: MultiTinctureToolsPanelProps) => {\n  const count = props.tinctures.length\n  const tincturePanels = []\n  for (let i = 0; i < count; i++) {\n    tincturePanels.push(\n      <>\n        <TinctureToolsPanel\n          tincture={props.tinctures[i]}\n          onChange={(tincture: Tincture) => {\n            const newTinctures = [...props.tinctures]\n            newTinctures[i] = tincture\n            props.onChange ?.(newTinctures)\n        }}\n        />\n        {i < count - 1 && <Divider />}\n      </>\n    )\n  }\n\n  return (\n    <>{tincturePanels}</>\n  )\n}\n","import { FormControl, InputLabel, Paper, Select, TextField } from \"@material-ui/core\"\nimport _ from \"lodash\"\nimport React from \"react\"\nimport CrestPalette from \"../CrestPalette\"\nimport { CrestPaletteContext } from \"../CrestPaletteContext\"\nimport Texture from \"../model/texture/Texture\"\nimport { StandardTincture, randomTincture, Tincture } from \"../model/texture/Tincture\"\nimport { Barry, Bendy, Chequy, Fusilly, Lozengy, Paly, Ruste } from \"../model/texture/VariationTexture\"\nimport { useNonInitialEffect } from \"../util/Hooks\"\nimport { TextureVisitor } from \"../util/Visitor\"\nimport { MultiTinctureToolsPanel, TinctureToolsPanel } from \"./TinctureToolsPanel\"\n\ntype TextureToolsPanelProps = {\n  texture: Texture\n  onChange?: (texture: Texture) => void\n}\n\ntype TextureOption = {\n  label: string,\n  factoryFunc: () => Texture,\n}\n\nexport const TextureToolsPanel = (props: TextureToolsPanelProps) => {\n  const crestPalette = React.useContext(CrestPaletteContext)\n\n  const [texture, setTexture] = React.useState<Texture>(props.texture)\n\n  useNonInitialEffect(() => {\n    props.onChange ?.(texture)\n  }, [texture])\n\n  const tinctures = getTinctures(\n    texture,\n    2,\n    crestPalette\n  )\n  const parameter = getParameter(\n    texture\n  )\n\n  const options = getOptions(\n    tinctures, parameter\n  )\n\n  const selectedValue = options.findIndex((option: TextureOption) => {\n    return _.isEqual(texture, option.factoryFunc())\n  })\n\n  const content = getContent(\n    texture,\n    (texture: Texture) => {\n      setTexture(texture)\n    }\n  )\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const selectedValue = event.target.value as number\n    setTexture(options[selectedValue].factoryFunc())\n  }\n\n  return (\n    <>\n      <FormControl>\n        <InputLabel htmlFor=\"texture-type-select\">Type</InputLabel>\n        <Select\n          native\n          value={selectedValue}\n          onChange={handleChange}\n          inputProps={{\n            id: 'texture-type-select',\n          }}\n        >\n          {options.map(({ label }, index) => {\n            return (<option value={index}>{label}</option>)\n          })}\n        </Select>\n      </FormControl>\n      {content}\n    </>\n  )\n}\n\nfunction getContent(\n  texture: Texture,\n  func: (texture: Texture) => void\n): React.ReactNode {\n  let content = null\n\n  const contentVisitor: TextureVisitor = {\n    // Tincture\n    visitStandardTincture: (standardTincture: StandardTincture) => {\n      content = (\n        <TinctureToolsPanel\n          tincture={standardTincture}\n          onChange={(tincture: Tincture) => {\n            func(tincture)\n          }}\n        />\n      )\n    },\n    // Variation\n    visitBarry: (barry: Barry) => {\n      content = (\n        <ParameterizedTwoPartVariationTextureToolsPanel\n          tinctures={[barry.tincture1, barry.tincture2]}\n          parameter={barry.count}\n          onTincturesChange={(tinctures: Tincture[]) => {\n            func(new Barry(\n              tinctures[0],\n              tinctures[1],\n              barry.count\n            ))\n          }}\n          onParameterChange={(parameter: number) => {\n            func(new Barry(\n              barry.tincture1,\n              barry.tincture2,\n              parameter\n            ))\n          }}\n        />\n      )\n    },\n    visitPaly: (paly: Paly) => {\n      content = (\n        <ParameterizedTwoPartVariationTextureToolsPanel\n          tinctures={[paly.tincture1, paly.tincture2]}\n          parameter={paly.count}\n          onTincturesChange={(tinctures: Tincture[]) => {\n            func(new Paly(\n              tinctures[0],\n              tinctures[1],\n              paly.count\n            ))\n          }}\n          onParameterChange={(parameter: number) => {\n            func(new Paly(\n              paly.tincture1,\n              paly.tincture2,\n              parameter\n            ))\n          }}\n        />\n      )\n    },\n    visitBendy: (bendy: Bendy) => {\n      content = (\n        <ParameterizedTwoPartVariationTextureToolsPanel\n          tinctures={[bendy.tincture1, bendy.tincture2]}\n          parameter={bendy.count}\n          onTincturesChange={(tinctures: Tincture[]) => {\n            func(new Bendy(\n              tinctures[0],\n              tinctures[1],\n              bendy.count,\n              bendy.sinister\n            ))\n          }}\n          onParameterChange={(parameter: number) => {\n            func(new Bendy(\n              bendy.tincture1,\n              bendy.tincture2,\n              parameter,\n              bendy.sinister\n            ))\n          }}\n        />\n      )\n    },\n    visitChequy: (chequy: Chequy) => {\n      content = (\n        <ParameterizedTwoPartVariationTextureToolsPanel\n          tinctures={[chequy.tincture1, chequy.tincture2]}\n          parameter={chequy.count}\n          onTincturesChange={(tinctures: Tincture[]) => {\n            func(new Chequy(\n              tinctures[0],\n              tinctures[1],\n              chequy.count\n            ))\n          }}\n          onParameterChange={(parameter: number) => {\n            func(new Chequy(\n              chequy.tincture1,\n              chequy.tincture2,\n              parameter\n            ))\n          }}\n        />\n      )\n    },\n    visitLozengy: (lozengy: Lozengy) => {\n      content = (\n        <ParameterizedTwoPartVariationTextureToolsPanel\n          tinctures={[lozengy.tincture1, lozengy.tincture2]}\n          parameter={lozengy.count}\n          onTincturesChange={(tinctures: Tincture[]) => {\n            func(new Lozengy(\n              tinctures[0],\n              tinctures[1],\n              lozengy.count\n            ))\n          }}\n          onParameterChange={(parameter: number) => {\n            func(new Lozengy(\n              lozengy.tincture1,\n              lozengy.tincture2,\n              parameter\n            ))\n          }}\n        />\n      )\n    },\n    visitFusilly: (fusilly: Fusilly) => {\n      content = (\n        <ParameterizedTwoPartVariationTextureToolsPanel\n          tinctures={[fusilly.tincture1, fusilly.tincture2]}\n          parameter={fusilly.count}\n          onTincturesChange={(tinctures: Tincture[]) => {\n            func(new Fusilly(\n              tinctures[0],\n              tinctures[1],\n              fusilly.count\n            ))\n          }}\n          onParameterChange={(parameter: number) => {\n            func(new Fusilly(\n              fusilly.tincture1,\n              fusilly.tincture2,\n              parameter\n            ))\n          }}\n        />\n      )\n    },\n    visitRuste: (ruste: Ruste) => {\n      content = (\n        <ParameterizedTwoPartVariationTextureToolsPanel\n          tinctures={[ruste.tincture1, ruste.tincture2]}\n          parameter={ruste.count}\n          onTincturesChange={(tinctures: Tincture[]) => {\n            func(new Ruste(\n              tinctures[0],\n              tinctures[1],\n              ruste.count\n            ))\n          }}\n          onParameterChange={(parameter: number) => {\n            func(new Ruste(\n              ruste.tincture1,\n              ruste.tincture2,\n              parameter\n            ))\n          }}\n        />\n      )\n    },\n  }\n\n  texture.accept(contentVisitor)\n\n  return content\n}\n\nfunction getOptions(\n  tinctures: Tincture[],\n  parameter: number | undefined\n): TextureOption[] {\n  return [\n    {\n      label: \"Solid\",\n      factoryFunc: () => {\n        return tinctures[0]\n      }\n    },\n    {\n      label: \"Barry\",\n      factoryFunc: () => {\n        return new Barry(\n          tinctures[0],\n          tinctures[1],\n          parameter,\n        )\n      }\n    },\n    {\n      label: \"Paly\",\n      factoryFunc: () => {\n        return new Paly(\n          tinctures[0],\n          tinctures[1],\n          parameter,\n        )\n      }\n    },\n    {\n      label: \"Bendy\",\n      factoryFunc: () => {\n        return new Bendy(\n          tinctures[0],\n          tinctures[1],\n          parameter,\n          false\n        )\n      }\n    },\n    {\n      label: \"Bendy sinister\",\n      factoryFunc: () => {\n        return new Bendy(\n          tinctures[0],\n          tinctures[1],\n          parameter,\n          true\n        )\n      }\n    },\n    {\n      label: \"Chequy\",\n      factoryFunc: () => {\n        return new Chequy(\n          tinctures[0],\n          tinctures[1],\n          parameter,\n        )\n      }\n    },\n    {\n      label: \"Lozengy\",\n      factoryFunc: () => {\n        return new Lozengy(\n          tinctures[0],\n          tinctures[1],\n          parameter,\n        )\n      }\n    },\n    {\n      label: \"Fusilly\",\n      factoryFunc: () => {\n        return new Fusilly(\n          tinctures[0],\n          tinctures[1],\n          parameter,\n        )\n      }\n    },\n    {\n      label: \"Ruste\",\n      factoryFunc: () => {\n        return new Ruste(\n          tinctures[0],\n          tinctures[1],\n          parameter,\n        )\n      }\n    },\n  ]\n}\n\nfunction getParameter(\n  texture: Texture\n): number | undefined {\n  let result = undefined\n\n  const visitor: TextureVisitor = {\n    // Tincture\n    visitStandardTincture: () => { },\n    // Variation\n    visitBarry: (barry: Barry) => {\n      result = barry.count\n    },\n    visitPaly: (paly: Paly) => {\n      result = paly.count\n    },\n    visitBendy: (bendy: Bendy) => {\n      result = bendy.count\n    },\n    visitChequy: (chequy: Chequy) => {\n      result = chequy.count\n    },\n    visitLozengy: (lozengy: Lozengy) => {\n      result = lozengy.count\n    },\n    visitFusilly: (fusilly: Fusilly) => {\n      result = fusilly.count\n    },\n    visitRuste: (ruste: Ruste) => {\n      result = ruste.count\n    },\n  }\n\n  texture.accept(visitor)\n\n  return result\n}\n\nfunction getTinctures(\n  texture: Texture,\n  minCount: number,\n  crestPalette: CrestPalette\n): Tincture[] {\n  const tinctures: Tincture[] = []\n\n  const visitor: TextureVisitor = {\n    // Tincture\n    visitStandardTincture: (standardTincture: StandardTincture) => {\n      tinctures.push(standardTincture)\n    },\n    // Variation\n    visitBarry: (barry: Barry) => {\n      tinctures.push(barry.tincture1)\n      tinctures.push(barry.tincture2)\n    },\n    visitPaly: (paly: Paly) => {\n      tinctures.push(paly.tincture1)\n      tinctures.push(paly.tincture2)\n    },\n    visitBendy: (bendy: Bendy) => {\n      tinctures.push(bendy.tincture1)\n      tinctures.push(bendy.tincture2)\n    },\n    visitChequy: (chequy: Chequy) => {\n      tinctures.push(chequy.tincture1)\n      tinctures.push(chequy.tincture2)\n    },\n    visitLozengy: (lozengy: Lozengy) => {\n      tinctures.push(lozengy.tincture1)\n      tinctures.push(lozengy.tincture2)\n    },\n    visitFusilly: (fusilly: Fusilly) => {\n      tinctures.push(fusilly.tincture1)\n      tinctures.push(fusilly.tincture2)\n    },\n    visitRuste: (ruste: Ruste) => {\n      tinctures.push(ruste.tincture1)\n      tinctures.push(ruste.tincture2)\n    },\n  }\n\n  texture.accept(visitor)\n\n  while (tinctures.length < minCount) {\n    tinctures.push(randomTincture())\n  }\n\n  return tinctures\n}\n\ntype ParameterizedTwoPartVariationTextureToolsPanelProps = {\n  tinctures: Tincture[]\n  parameter: number\n  onTincturesChange: (tinctures: Tincture[]) => void\n  onParameterChange: (parameter: number) => void\n}\n\nconst ParameterizedTwoPartVariationTextureToolsPanel = (props: ParameterizedTwoPartVariationTextureToolsPanelProps) => {\n  return (\n    <>\n      <MultiTinctureToolsPanel\n        tinctures={\n          [props.tinctures[0], props.tinctures[1]]\n        }\n        onChange={(tinctures: Tincture[]) => {\n          props.onTincturesChange(tinctures)\n        }}\n      />\n      <TextField\n        label=\"Number\"\n        type=\"number\"\n        value={props.parameter}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n          const parameter = parseInt(event.target.value)\n          props.onParameterChange(parameter)\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n    </>\n  )\n}\n","import { Accordion, AccordionDetails, AccordionSummary, FormControl, FormLabel, InputLabel, Paper, Select, Typography } from \"@material-ui/core\"\nimport _ from \"lodash\"\nimport React, { useState } from \"react\"\nimport CrestPalette from \"../CrestPalette\"\nimport { CrestPaletteContext } from \"../CrestPaletteContext\"\nimport { PerBendDividedField, PerChevronDividedField, PerCrossDividedField, PerFessDividedField, PerPaleDividedField, PerPallDividedField, PerSaltireDividedField } from \"../model/field/DividedField\"\nimport Field from \"../model/field/Field\"\nimport SolidField from \"../model/field/SolidField\"\nimport Texture from \"../model/texture/Texture\"\nimport { randomTincture } from \"../model/texture/Tincture\"\nimport { useNonInitialEffect } from \"../util/Hooks\"\nimport { FieldVisitor } from \"../util/Visitor\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport { TextureToolsPanel } from \"./TextureToolsPanel\"\nimport { useStyles } from \"../CrestEditor\"\n\ntype FieldToolsPanelProps = {\n  field: Field\n  onChange?: (field: Field) => void\n}\n\nexport const FieldToolsPanel = (props: FieldToolsPanelProps) => {\n  const crestPalette = React.useContext(CrestPaletteContext)\n\n  const [field, setField] = useState<Field>(props.field)\n\n  useNonInitialEffect(() => {\n    props.onChange ?.(field)\n  }, [field])\n\n  const textures = getTextures(\n    field,\n    3,\n    crestPalette\n  )\n\n  const options = getOptions(\n    textures\n  )\n\n  const selectedValue = options.findIndex((option: FieldOption) => {\n    return _.isEqual(field, option.factoryFunc())\n  })\n\n  const content = getContent(\n    field,\n    (field: Field) => { setField(field) }\n  )\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const selectedValue = event.target.value as number\n    setField(options[selectedValue].factoryFunc())\n  }\n\n  return (\n    <>\n      <FormControl>\n        <InputLabel htmlFor=\"field-type-select\">Type</InputLabel>\n        <Select\n          native\n          value={selectedValue}\n          onChange={handleChange}\n          inputProps={{\n            id: 'field-type-select',\n          }}\n        >\n          {options.map(({ label }, index) => {\n            return (<option value={index}>{label}</option>)\n          })}\n        </Select>\n      </FormControl>\n      {content}\n    </>\n  )\n}\n\nfunction getContent(\n  field: Field,\n  onChange: (field: Field) => void\n): React.ReactNode {\n  let content = null\n\n  const contentVisitor: FieldVisitor = {\n    visitSolidField: (field: SolidField) => {\n      content = (\n        <MultiTextureToolsPanel\n          withLabels={true}\n          textures={[field.texture]}\n          onChange={(textures: Texture[]) => {\n            onChange(new SolidField(\n              textures[0]\n            ))\n          }}\n        />\n      )\n    },\n    visitPerFessDividedField: (field: PerFessDividedField) => {\n      content = (\n        <MultiTextureToolsPanel\n          withLabels={true}\n          textures={[field.texture1, field.texture2]}\n          onChange={(textures: Texture[]) => {\n            onChange(new PerFessDividedField(\n              textures[0], textures[1]\n            ))\n          }}\n        />\n      )\n    },\n    visitPerPaleDividedField: (field: PerPaleDividedField) => {\n      content = (\n        <MultiTextureToolsPanel\n          withLabels={true}\n          textures={[field.texture1, field.texture2]}\n          onChange={(textures: Texture[]) => {\n            onChange(new PerPaleDividedField(\n              textures[0], textures[1]\n            ))\n          }}\n        />\n      )\n    },\n    visitPerBendDividedField: (field: PerBendDividedField) => {\n      content = (\n        <MultiTextureToolsPanel\n          withLabels={true}\n          textures={[field.texture1, field.texture2]}\n          onChange={(textures: Texture[]) => {\n            onChange(new PerBendDividedField(\n              textures[0], textures[1], field.sinister\n            ))\n          }}\n        />\n      )\n    },\n    visitPerSaltireDividedField: (field: PerSaltireDividedField) => {\n      content = (\n        <MultiTextureToolsPanel\n          withLabels={true}\n          textures={[field.texture1, field.texture2]}\n          onChange={(textures: Texture[]) => {\n            onChange(new PerSaltireDividedField(\n              textures[0], textures[1]\n            ))\n          }}\n        />\n      )\n    },\n    visitPerCrossDividedField: (field: PerCrossDividedField) => {\n      content = (\n        <MultiTextureToolsPanel\n          withLabels={true}\n          textures={[field.texture1, field.texture2]}\n          onChange={(textures: Texture[]) => {\n            onChange(new PerCrossDividedField(\n              textures[0], textures[1]\n            ))\n          }}\n        />\n      )\n    },\n    visitPerChevronDividedField: (field: PerChevronDividedField) => {\n      content = (\n        <MultiTextureToolsPanel\n          withLabels={true}\n          textures={[field.texture1, field.texture2]}\n          onChange={(textures: Texture[]) => {\n            onChange(new PerChevronDividedField(\n              textures[0], textures[1], field.inverted\n            ))\n          }}\n        />\n      )\n    },\n    visitPerPallDividedField: (field: PerPallDividedField) => {\n      content = (\n        <MultiTextureToolsPanel\n          withLabels={true}\n          textures={[field.texture1, field.texture2, field.texture3]}\n          onChange={(textures: Texture[]) => {\n            onChange(new PerPallDividedField(\n              textures[0], textures[1], textures[2], field.inverted\n            ))\n          }}\n        />\n      )\n    }\n  }\n\n  field.accept(contentVisitor)\n\n  return content\n}\n\ntype MultiTextureToolsPanel = {\n  textures: Texture[],\n  onChange: (textures: Texture[]) => void,\n  withLabels?: boolean\n}\n\nconst MultiTextureToolsPanel = (props: MultiTextureToolsPanel) => {\n  const classes = useStyles()\n\n  const count = props.textures.length\n  const panels = []\n  for (let i = 0; i < count; i++) {\n    let label\n    if (props.withLabels === true) {\n      label = \"Texture\"\n      if (count !== 1) {\n        label += \" \" + (i + 1)\n      }\n    }\n    panels.push(\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>{label}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.toolsPanel}>\n          <TextureToolsPanel\n            texture={props.textures[i]}\n            onChange={(texture: Texture) => {\n              const newTextures = [...props.textures]\n              newTextures[i] = texture\n              props.onChange(newTextures)\n            }}\n          />\n        </AccordionDetails>\n      </Accordion>\n    )\n    /*panels.push(\n      <>\n        {props.withLabels !== undefined &&\n          <FormLabel component=\"legend\">{label}</FormLabel>\n        }\n        <TextureToolsPanel\n          texture={props.textures[i]}\n          onChange={(texture: Texture) => {\n            const newTextures = [...props.textures]\n            newTextures[i] = texture\n            props.onChange(newTextures)\n          }}\n        />\n      </>\n    )*/\n  }\n\n  return (\n    <>{panels}</>\n  )\n}\n\nfunction getTextures(\n  field: Field,\n  minCount: number,\n  crestPalette: CrestPalette\n): Texture[] {\n  const result: Texture[] = []\n\n  const visitor: FieldVisitor = {\n    visitSolidField: (field: SolidField) => {\n      result.push(field.texture)\n    },\n    visitPerFessDividedField: (field: PerFessDividedField) => {\n      result.push(field.texture1)\n      result.push(field.texture2)\n    },\n    visitPerPaleDividedField: (field: PerPaleDividedField) => {\n      result.push(field.texture1)\n      result.push(field.texture2)\n    },\n    visitPerBendDividedField: (field: PerBendDividedField) => {\n      result.push(field.texture1)\n      result.push(field.texture2)\n    },\n    visitPerSaltireDividedField: (field: PerSaltireDividedField) => {\n      result.push(field.texture1)\n      result.push(field.texture2)\n    },\n    visitPerCrossDividedField: (field: PerCrossDividedField) => {\n      result.push(field.texture1)\n      result.push(field.texture2)\n    },\n    visitPerChevronDividedField: (field: PerChevronDividedField) => {\n      result.push(field.texture1)\n      result.push(field.texture2)\n    },\n    visitPerPallDividedField: (field: PerPallDividedField) => {\n      result.push(field.texture1)\n      result.push(field.texture2)\n      result.push(field.texture3)\n    },\n  }\n\n  field.accept(visitor)\n\n  while (result.length < minCount) {\n    result.push(randomTincture())\n  }\n\n  return result\n}\n\ntype FieldOption = {\n  label: string,\n  factoryFunc: () => Field,\n}\n\nfunction getOptions(textures: Texture[]): FieldOption[] {\n  return [\n    {\n      label: \"Solid\",\n      factoryFunc: () => {\n        return new SolidField(textures[0])\n      }\n    },\n    {\n      label: \"Per fess\",\n      factoryFunc: () => {\n        return new PerFessDividedField(\n          textures[0],\n          textures[1]\n        )\n      }\n    },\n    {\n      label: \"Per pale\",\n      factoryFunc: () => {\n        return new PerPaleDividedField(\n          textures[0],\n          textures[1]\n        )\n      }\n    },\n    {\n      label: \"Per bend\",\n      factoryFunc: () => {\n        return new PerBendDividedField(\n          textures[0],\n          textures[1],\n          false\n        )\n      }\n    },\n    {\n      label: \"Per bend sinister\",\n      factoryFunc: () => {\n        return new PerBendDividedField(\n          textures[0],\n          textures[1],\n          true\n        )\n      }\n    },\n    {\n      label: \"Per saltire\",\n      factoryFunc: () => {\n        return new PerSaltireDividedField(\n          textures[0],\n          textures[1]\n        )\n      }\n    },\n    {\n      label: \"Per cross\",\n      factoryFunc: () => {\n        return new PerCrossDividedField(\n          textures[0],\n          textures[1]\n        )\n      }\n    },\n    {\n      label: \"Per chevron\",\n      factoryFunc: () => {\n        return new PerChevronDividedField(\n          textures[0],\n          textures[1],\n          false\n        )\n      }\n    },\n    {\n      label: \"Per chevron inverted\",\n      factoryFunc: () => {\n        return new PerChevronDividedField(\n          textures[0],\n          textures[1],\n          true\n        )\n      }\n    },\n    {\n      label: \"Per pall\",\n      factoryFunc: () => {\n        return new PerPallDividedField(\n          textures[0],\n          textures[1],\n          textures[2],\n          false\n        )\n      }\n    },\n    {\n      label: \"Per pall inverted\",\n      factoryFunc: () => {\n        return new PerPallDividedField(\n          textures[0],\n          textures[1],\n          textures[2],\n          true\n        )\n      }\n    },\n  ]\n}\n","import Point from \"../../geometry/Point\"\nimport { EscutcheonVisitor } from \"../../util/Visitor\"\nimport Escutcheon from \"./Escutcheon\"\n\nclass CircleEscutcheon extends Escutcheon {\n\n  constructor(\n    private readonly r: number\n  ) {\n    super()\n  }\n\n  get chief(): Point {\n    return new Point(\n      this.r, 0\n    )\n  }\n  get dexter(): Point {\n    return new Point(\n      0, this.r\n    )\n  }\n  get sinister(): Point {\n    return new Point(\n      2 * this.r, this.r\n    )\n  }\n  get base(): Point {\n    return new Point(\n      this.r, 2 * this.r\n    )\n  }\n\n  accept(visitor: EscutcheonVisitor): void {\n    visitor.visitCircleEscutcheon(this)\n  }\n}\n\nexport default CircleEscutcheon\n","import Point from \"../../geometry/Point\"\nimport { EscutcheonVisitor } from \"../../util/Visitor\"\nimport Escutcheon from \"./Escutcheon\"\n\nclass RectangleEscutcheon extends Escutcheon {\n\n  constructor(\n    private readonly w: number,\n    private readonly h: number\n  ) {\n    super()\n  }\n\n  get chief(): Point {\n    return new Point(\n      0.5 * this.w, 0\n    )\n  }\n  get dexter(): Point {\n    return new Point(\n      0, 0.5 * this.h\n    )\n  }\n  get sinister(): Point {\n    return new Point(\n      this.w, 0.5 * this.h\n    )\n  }\n  get base(): Point {\n    return new Point(\n      0.5 * this.w, this.h\n    )\n  }\n\n  accept(visitor: EscutcheonVisitor): void {\n    visitor.visitRectangleEscutcheon(this)\n  }\n}\n\nexport default RectangleEscutcheon\n","import { FormControl, InputLabel, Paper, Select } from \"@material-ui/core\"\nimport _ from \"lodash\"\nimport React from \"react\"\nimport CircleEscutcheon from \"../model/escutcheon/CircleEscutcheon\"\nimport Escutcheon from \"../model/escutcheon/Escutcheon\"\nimport HeaterEscutcheon from \"../model/escutcheon/HeaterEscutcheon\"\nimport RectangleEscutcheon from \"../model/escutcheon/RectangleEscutcheon\"\nimport { useNonInitialEffect } from \"../util/Hooks\"\n\ntype EscutcheonToolsPanelProps = {\n  escutcheon: Escutcheon,\n  onChange?: (escutcheon: Escutcheon) => void\n}\n\nexport const EscutcheonToolsPanel = (props: EscutcheonToolsPanelProps) => {\n  const [escutcheon, setEscutcheon] = React.useState(props.escutcheon)\n\n  useNonInitialEffect(() => {\n    props.onChange ?.(escutcheon)\n  }, [escutcheon])\n\n  const options = getOptions()\n\n  let selectedValue = -1\n  for (let i = 0; i < options.length; i++) {\n    if (_.isEqual(escutcheon, options[i].factoryFunc())) {\n      selectedValue = i\n      break\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const selectedValue = event.target.value as number\n    setEscutcheon(options[selectedValue].factoryFunc())\n  }\n\n  return (\n    <FormControl>\n      <InputLabel htmlFor=\"escutcheon-type-select\">Type</InputLabel>\n      <Select\n        native\n        value={selectedValue}\n        onChange={handleChange}\n        inputProps={{\n          id: 'escutcheon-type-select',\n        }}\n      >\n        {selectedValue < 0 &&\n          <option aria-label=\"None\" value=\"-1\" />\n        }\n        {options.map(({ label }, index) => {\n          return (<option value={index}>{label}</option>)\n        })}\n      </Select>\n    </FormControl>\n  )\n}\n\ntype EscutcheonOption = {\n  label: string,\n  factoryFunc: () => Escutcheon,\n}\n\nfunction getOptions(): EscutcheonOption[] {\n  return [\n    {\n      label: \"Heater\",\n      factoryFunc: () => {\n        return new HeaterEscutcheon(200)\n      }\n    },\n    {\n      label: \"Square\",\n      factoryFunc: () => {\n        return new RectangleEscutcheon(600, 600)\n      }\n\n    },\n    {\n      label: \"Flag (2:3)\",\n      factoryFunc: () => {\n        return new RectangleEscutcheon(600, 400)\n      }\n    },\n    {\n      label: \"Flag (1:2)\",\n      factoryFunc: () => {\n        return new RectangleEscutcheon(600, 300)\n      }\n    },\n    {\n      label: \"Circle\",\n      factoryFunc: () => {\n        return new CircleEscutcheon(300)\n      }\n    },\n  ]\n}\n","enum LozengeType {\n  Normal, Mascle, Ruste\n}\n\nexport default LozengeType\n","import Crest from './model/Crest'\nimport { PerBendDividedField, PerChevronDividedField, PerCrossDividedField, PerFessDividedField, PerPaleDividedField, PerPallDividedField, PerSaltireDividedField } from './model/field/DividedField'\nimport SolidField from './model/field/SolidField'\nimport { Billet, Lozenge, Mullet, Roundel } from './model/charge/MobileSubordinary'\nimport { Bend, Cross, Fess, Pale, Saltire } from './model/ordinary/Ordinary'\nimport { Barry, Bendy, Chequy, Fusilly, Lozengy, Paly, Ruste } from './model/texture/VariationTexture'\nimport { ChargeVisitor, CrestVisitor, FieldVisitor, OrdinaryVisitor, TextureVisitor, TinctureVisitor, Visitable } from './util/Visitor'\nimport { InBend, InFess, InPale } from './model/charge/GroupCharge'\nimport { StandardTincture } from './model/texture/Tincture'\nimport CrestPalette from './CrestPalette'\n\nexport abstract class CrestRenderer\n  implements CrestVisitor, FieldVisitor, TextureVisitor, ChargeVisitor, OrdinaryVisitor {\n\n  protected readonly viewportWidth: number\n  protected readonly viewportHeight: number\n\n  constructor(\n    viewportWidth: number,\n    viewportHeight: number,\n    protected readonly crestPalette: CrestPalette\n  ) {\n    console.log(\"CrestRenderer\", viewportWidth, viewportHeight)\n    this.viewportWidth = viewportWidth\n    this.viewportHeight = viewportHeight\n  }\n\n  protected value: React.ReactNode = null\n\n  render(\n    visitable: Visitable<Renderable>\n  ): React.ReactNode {\n    visitable.accept(this)\n    return this.value\n  }\n\n  abstract visitCrest(crest: Crest): void\n\n  abstract visitSolidField(field: SolidField): void\n  abstract visitPerFessDividedField(field: PerFessDividedField): void\n  abstract visitPerPaleDividedField(field: PerPaleDividedField): void\n  abstract visitPerBendDividedField(field: PerBendDividedField): void\n  abstract visitPerSaltireDividedField(field: PerSaltireDividedField): void\n  abstract visitPerCrossDividedField(field: PerCrossDividedField): void\n  abstract visitPerChevronDividedField(field: PerChevronDividedField): void\n  abstract visitPerPallDividedField(field: PerPallDividedField): void\n\n  abstract visitStandardTincture(standardTincture: StandardTincture): void\n  abstract visitBarry(barry: Barry): void\n  abstract visitPaly(paly: Paly): void\n  abstract visitBendy(bendy: Bendy): void\n  abstract visitChequy(chequy: Chequy): void\n  abstract visitLozengy(lozengy: Lozengy): void\n  abstract visitFusilly(fusilly: Fusilly): void\n  abstract visitRuste(ruste: Ruste): void\n\n  abstract visitRoundel(roundel: Roundel): void\n  abstract visitBillet(billet: Billet): void\n  abstract visitLozenge(lozenge: Lozenge): void\n  abstract visitMullet(mullet: Mullet): void\n  abstract visitInFess(inFess: InFess): void\n  abstract visitInPale(inPale: InPale): void\n  abstract visitInBend(inBend: InBend): void\n\n  abstract visitPale(pale: Pale): void\n  abstract visitFess(fess: Fess): void\n  abstract visitCross(cross: Cross): void\n  abstract visitBend(bend: Bend): void\n  abstract visitSaltire(saltire: Saltire): void\n}\n\nexport type Renderable = CrestVisitor | FieldVisitor | TinctureVisitor | TextureVisitor | ChargeVisitor | OrdinaryVisitor\n","import { TextureVisitor } from \"../../util/Visitor\";\nimport Texture from \"./Texture\";\n\nclass BlankTexture implements Texture {\n  accept(visitor: TextureVisitor): void {\n    // Do nothing\n  }\n}\n\nexport default BlankTexture\n","import Konva from \"konva\";\nimport CircleEscutcheon from \"./model/escutcheon/CircleEscutcheon\";\nimport HeaterEscutcheon from \"./model/escutcheon/HeaterEscutcheon\";\nimport RectangleEscutcheon from \"./model/escutcheon/RectangleEscutcheon\";\nimport { EscutcheonVisitor, Visitable } from \"./util/Visitor\";\nclass ContextPathDrawer implements EscutcheonVisitor {\n\n  constructor(\n    readonly context: Konva.Context\n  ) { }\n\n  draw(visitable: Visitable<EscutcheonVisitor>): void {\n    visitable.accept(this)\n  }\n\n  visitHeaterEscutcheon(visitable: HeaterEscutcheon): void {\n    this.context.beginPath()\n    this.context.moveTo(visitable.bounds.left, visitable.bounds.top);\n    this.context.lineTo(visitable.bounds.right, visitable.bounds.top);\n    this.context.lineTo(visitable.bounds.right, visitable.bounds.top + visitable.bounds.width / 3);\n    this.context.arc(visitable.bounds.left, visitable.bounds.top + visitable.bounds.width / 3, visitable.bounds.width, 0, 60 * Math.PI / 180, false)\n    this.context.arc(visitable.bounds.right, visitable.bounds.top + visitable.bounds.width / 3, visitable.bounds.width, 120 * Math.PI / 180, Math.PI, false)\n    this.context.closePath()\n  }\n\n  visitRectangleEscutcheon(visitable: RectangleEscutcheon): void {\n    this.context.beginPath()\n    this.context.moveTo(visitable.bounds.left, visitable.bounds.top)\n    this.context.lineTo(visitable.bounds.right, visitable.bounds.top)\n    this.context.lineTo(visitable.bounds.right, visitable.bounds.bottom)\n    this.context.lineTo(visitable.bounds.left, visitable.bounds.bottom)\n    this.context.closePath()\n  }\n\n  visitCircleEscutcheon(visitable: CircleEscutcheon): void {\n    const center = visitable.bounds.center\n    this.context.beginPath()\n    this.context.arc(\n      center.x, center.y,\n      visitable.bounds.width / 2,\n      0, 2 * Math.PI,\n      false\n    )\n  }\n}\n\nexport default ContextPathDrawer\n","import { CrestRenderer, Renderable } from './CrestRenderer'\nimport Konva from 'konva'\nimport { Shape, KonvaNodeComponent, Stage, Layer, Rect, Text, Circle, Line, Group, Star } from 'react-konva'\nimport React from 'react'\nimport { PerBendDividedField, PerChevronDividedField, PerCrossDividedField, PerFessDividedField, PerPaleDividedField, PerPallDividedField, PerSaltireDividedField } from './model/field/DividedField'\nimport SolidField from './model/field/SolidField'\nimport Crest from './model/Crest'\nimport { linear, linearP, slope } from './MathUtils'\nimport BlankTexture from './model/texture/BlankTexture'\nimport { Barry, Bendy, Chequy, Fusilly, Lozengy, Paly, Ruste } from './model/texture/VariationTexture'\nimport { Bend, Cross, Fess, Pale, Saltire } from './model/ordinary/Ordinary'\nimport Escutcheon from './model/escutcheon/Escutcheon'\nimport RectangleEscutcheon from './model/escutcheon/RectangleEscutcheon'\nimport Rectangle from './geometry/Rectangle'\nimport { Billet, Lozenge, Mullet, Roundel } from './model/charge/MobileSubordinary'\nimport { Charge } from './model/charge/Charge'\nimport Point from './geometry/Point'\nimport LozengeType from './model/LozengeType'\nimport ContextPathDrawer from './ContextPathDrawer'\nimport { ChargeVisitor, CrestVisitor, FieldVisitor, TextureVisitor, Visitable } from './util/Visitor'\nimport { InBend, InFess, InPale } from './model/charge/GroupCharge'\nimport { StandardTincture, Tincture } from './model/texture/Tincture'\nimport CrestPalette from './CrestPalette'\n\nclass PlainCrestRenderer extends CrestRenderer {\n\n  private readonly escutcheon: Escutcheon\n  private readonly bounds: Rectangle\n\n  constructor(\n    viewportWidth: number,\n    viewportHeight: number,\n    crestPalette: CrestPalette,\n    escutcheon: Escutcheon\n  ) {\n    super(viewportWidth, viewportHeight, crestPalette)\n\n    this.escutcheon = escutcheon\n    this.bounds = this.escutcheon.bounds\n  }\n\n  visitCrest(crest: Crest): void {\n    const bounds = this.bounds\n    const offsetX = 0.5 * (this.viewportWidth - bounds.width)\n    const offsetY = 0.5 * (this.viewportHeight - bounds.height)\n\n    this.value = (\n      <Layer\n        offsetX={-offsetX}\n        offsetY={-offsetY}\n      >\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            const drawer = new ContextPathDrawer(ctx)\n            drawer.draw(this.escutcheon)\n          }}\n        >\n          {this.renderSelf(crest.field)}\n          {crest.ordinaries.map((ordinary, index) => {\n            return this.renderSelf(ordinary)\n          })}\n        </Group>\n        <Shape\n          sceneFunc={(context, shape) => {\n            const drawer = new ContextPathDrawer(context)\n            drawer.draw(this.escutcheon)\n            // (!) Konva specific method, it is very important\n            context.fillStrokeShape(shape);\n          }}\n          stroke=\"black\"\n          strokeWidth={4}\n        />\n        <Rect\n          x={bounds.left}\n          y={bounds.top}\n          width={bounds.width}\n          height={bounds.height}\n          stroke=\"black\"\n          strokeWidth={4}\n        />\n      </Layer>\n    )\n  }\n\n  // Field\n  visitSolidField(solidField: SolidField): void {\n    this.value = (\n      <Group>\n        {this.renderSelf(solidField.texture)}\n      </Group >\n    )\n  }\n\n  visitPerFessDividedField(field: PerFessDividedField): void {\n    const fessPoint = this.escutcheon.fessPoint\n    const bounds = this.escutcheon.bounds\n    this.value = (\n      <Group>\n        <Group\n          clipX={bounds.left}\n          clipY={bounds.top}\n          clipWidth={bounds.width}\n          clipHeight={fessPoint.y - bounds.top}\n        >\n          {this.renderSelf(field.texture1)}\n        </Group>\n        <Group\n          clipX={bounds.left}\n          clipY={fessPoint.y}\n          clipWidth={bounds.width}\n          clipHeight={bounds.bottom - fessPoint.y}\n        >\n          {this.renderSelf(field.texture2)}\n        </Group>\n      </Group>\n    )\n  }\n\n  visitPerPaleDividedField(field: PerPaleDividedField): void {\n    const bounds = this.escutcheon.bounds\n    this.value = (\n      <Group>\n        <Group\n          clipX={bounds.left}\n          clipY={bounds.top}\n          clipWidth={bounds.width / 2}\n          clipHeight={bounds.height}\n        >\n          {this.renderSelf(field.texture1)}\n        </Group>\n        <Group\n          clipX={bounds.centerHorizontal}\n          clipY={bounds.top}\n          clipWidth={bounds.width / 2}\n          clipHeight={bounds.height}\n        >\n          {this.renderSelf(field.texture2)}\n        </Group>\n      </Group>\n    )\n  }\n\n  visitPerBendDividedField(field: PerBendDividedField): void {\n    const bounds = this.bounds\n    const startPoint = field.sinister ? this.escutcheon.sinisterChief : this.escutcheon.dexterChief\n    const endPoint = field.sinister ? this.escutcheon.dexterBase : this.escutcheon.sinisterBase\n    const fun = linearP(\n      startPoint,\n      endPoint\n    )\n    this.value = (\n      <Group>\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            ctx.beginPath()\n            ctx.moveTo(bounds.left, fun(bounds.left))\n            ctx.lineTo(bounds.right, fun(bounds.right))\n            if (field.sinister) {\n              ctx.lineTo(bounds.left, bounds.top)\n            } else {\n              ctx.lineTo(bounds.right, bounds.top)\n            }\n            ctx.closePath()\n          }}>\n          {this.renderSelf(field.texture1)}\n        </Group>\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            ctx.beginPath()\n            ctx.moveTo(bounds.left, fun(bounds.left))\n            ctx.lineTo(bounds.right, fun(bounds.right))\n            ctx.lineTo(bounds.right, bounds.bottom)\n            ctx.lineTo(bounds.left, bounds.bottom)\n            ctx.closePath()\n          }}>\n          {this.renderSelf(field.texture2)}\n        </Group>\n      </Group>\n    )\n  }\n\n  visitPerSaltireDividedField(field: PerSaltireDividedField): void {\n    const bounds = this.escutcheon.bounds\n    const fun1 = linearP(\n      this.escutcheon.dexterChief,\n      this.escutcheon.sinisterBase\n    )\n    const fun2 = linearP(\n      this.escutcheon.dexterBase,\n      this.escutcheon.sinisterChief\n    )\n    this.value = (\n      <Group>\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            ctx.beginPath()\n            ctx.moveTo(bounds.left, fun1(bounds.left))\n            ctx.lineTo(bounds.right, fun1(bounds.right))\n            ctx.lineTo(bounds.right, bounds.bottom)\n            ctx.lineTo(bounds.left, bounds.bottom)\n            ctx.lineTo(bounds.left, fun2(bounds.left))\n            ctx.lineTo(bounds.right, fun2(bounds.right))\n\n            ctx.closePath()\n          }}\n        >\n          {this.renderSelf(field.texture1)}\n        </Group>\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            ctx.beginPath()\n            ctx.moveTo(bounds.left, fun1(bounds.left))\n            ctx.lineTo(bounds.right, fun1(bounds.right))\n            ctx.lineTo(bounds.right, fun2(bounds.right))\n            ctx.lineTo(bounds.left, fun2(bounds.left))\n            ctx.closePath()\n          }}\n        >\n          {this.renderSelf(field.texture2)}\n        </Group>\n      </Group>\n    )\n  }\n\n  visitPerCrossDividedField(field: PerCrossDividedField): void {\n    const bounds = this.escutcheon.bounds\n    const fessPoint = this.escutcheon.fessPoint\n    const x = fessPoint.x\n    const y = fessPoint.y\n    this.value = (\n      <Group\n        clipX={bounds.left}\n        clipY={bounds.top}\n        clipWidth={bounds.width}\n        clipHeight={bounds.height}\n      >\n        {this.renderSelf(field.texture2)}\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            ctx.beginPath()\n            ctx.moveTo(bounds.left, bounds.top)\n            ctx.lineTo(x, bounds.top)\n            ctx.lineTo(x, bounds.bottom)\n            ctx.lineTo(bounds.right, bounds.bottom)\n            ctx.lineTo(bounds.right, y)\n            ctx.lineTo(0, y)\n            ctx.closePath()\n          }}\n        >\n          {this.renderSelf(field.texture1)}\n        </Group>\n      </Group>\n    )\n  }\n\n  visitPerChevronDividedField(field: PerChevronDividedField): void {\n    const bounds = this.escutcheon.bounds\n    const fessPoint = this.escutcheon.fessPoint\n    const fun1 =\n      field.inverted ? this.escutcheon.bendFunction : this.escutcheon.bendSinisterFunction\n    const fun2 =\n      field.inverted ? this.escutcheon.bendSinisterFunction : this.escutcheon.bendFunction\n    const fun = function(x: number) {\n      if (x < fessPoint.x) {\n        return fun1(x)\n      } else if (x > fessPoint.x) {\n        return fun2(x)\n      } else {\n        return fessPoint.y\n      }\n    }\n\n    this.value = (\n      <Group\n        clipX={bounds.left}\n        clipY={bounds.top}\n        clipWidth={bounds.width}\n        clipHeight={bounds.height}\n      >\n        {this.renderSelf(field.texture1)}\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            ctx.beginPath()\n            ctx.moveTo(bounds.left, fun(bounds.left))\n            ctx.lineTo(fessPoint.x, fessPoint.y)\n            ctx.lineTo(bounds.right, fun(bounds.right))\n            ctx.lineTo(bounds.right, field.inverted ? bounds.top : bounds.bottom)\n            ctx.lineTo(bounds.left, field.inverted ? bounds.top : bounds.bottom)\n            ctx.closePath()\n          }}\n        >\n          {this.renderSelf(field.texture2)}\n        </Group>\n      </Group>\n    )\n  }\n\n  visitPerPallDividedField(field: PerPallDividedField): void {\n    const perPale = new PerPaleDividedField(\n      field.texture2,\n      field.texture3\n    )\n    const perChevron = new PerChevronDividedField(\n      new BlankTexture(),\n      field.texture1,\n      !field.inverted\n    )\n    this.value = (\n      <Group>\n        {this.renderSelf(perPale)}\n        {this.renderSelf(perChevron)}\n      </Group>\n    )\n  }\n\n  // Variation\n  visitBarry(barry: Barry): void {\n    const h = this.bounds.height / (barry.count)\n    const w = this.bounds.width\n    this.value = (\n      <Group>\n        {this.renderSelf(barry.tincture2)}\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            for (let i = 0; i < barry.count / 2; i++) {\n              ctx.rect(\n                this.bounds.left, this.bounds.top + 2 * i * h,\n                w, h\n              )\n            }\n          }}\n        >\n          {this.renderSelf(barry.tincture1)}\n        </Group>\n      </Group>\n    )\n  }\n\n  visitPaly(paly: Paly): void {\n    const w = this.bounds.width / (paly.count)\n    const h = this.bounds.height\n    this.value = (\n      <Group>\n        {this.renderSelf(paly.tincture2)}\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            for (let i = 0; i < paly.count / 2; i++) {\n              ctx.rect(\n                this.bounds.left + 2 * i * w, this.bounds.top,\n                w, h\n              )\n            }\n          }}\n        >\n          {this.renderSelf(paly.tincture1)}\n        </Group>\n      </Group>\n    )\n  }\n\n  visitBendy(bendy: Bendy): void {\n    const w = this.bounds.width\n    const h = this.bounds.height\n    const dimen = Math.SQRT2 * (w + h) / 2\n    const t = dimen / (bendy.count)\n    this.value = (\n      <Group>\n        {this.renderSelf(bendy.tincture2)}\n        <Group\n          x={this.bounds.centerHorizontal}\n          y={this.bounds.centerVertical}\n          offsetX={dimen / 2}\n          offsetY={dimen / 2}\n          rotation={bendy.sinister ? 45 : -45}\n          clipFunc={(ctx: Konva.Context) => {\n            for (let i = 0; i < bendy.count; i++) {\n              ctx.rect(0, 2 * i * t, dimen, t)\n            }\n          }}>\n          {this.renderSelf(bendy.tincture1, dimen, dimen)}\n        </Group>\n      </Group>\n    )\n  }\n\n  visitChequy(chequy: Chequy): void {\n    const w = this.bounds.width\n    const h = this.bounds.height\n    const d = Math.min(w, h) / (chequy.count)\n    const rowCount = Math.ceil(h / d / 2)\n    const colCount = Math.ceil(w / d / 2)\n    this.value = (\n      <Group>\n        {this.renderSelf(chequy.tincture2)}\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            for (let row = 0; row < rowCount; row++) {\n              for (let col = 0; col < colCount; col++) {\n                ctx.rect(\n                  this.bounds.left + col * 2 * d,\n                  this.bounds.top + row * 2 * d,\n                  d,\n                  d\n                )\n                ctx.rect(\n                  this.bounds.left + (col * 2 + 1) * d,\n                  this.bounds.top + (row * 2 + 1) * d,\n                  d,\n                  d\n                )\n              }\n            }\n          }}>\n          {this.renderSelf(chequy.tincture1)}\n        </Group>\n      </Group>\n    )\n  }\n\n  visitLozengy(lozengy: Lozengy): void {\n    this.value = this.innerRenderLozengy(\n      lozengy.tincture1, lozengy.tincture2,\n      lozengy.count, 1\n    )\n  }\n\n  visitFusilly(fusilly: Fusilly): void {\n    this.value = this.innerRenderLozengy(\n      fusilly.tincture1, fusilly.tincture2,\n      fusilly.count, 1.5\n    )\n  }\n\n  visitRuste(ruste: Ruste): void {\n    this.value = this.innerRenderLozengy(\n      ruste.tincture1, ruste.tincture2,\n      ruste.count, 1.5, LozengeType.Ruste\n    )\n  }\n\n  private innerRenderLozengy(\n    tincture1: Tincture,\n    tincture2: Tincture,\n    count: number,\n    dRatio: number,\n    type: LozengeType = LozengeType.Normal\n  ): React.ReactNode {\n    const w = this.bounds.width\n    const h = this.bounds.height\n    let p: number, q: number\n    if (w <= h) {\n      q = w / (count - 1)\n      p = q * dRatio\n    } else {\n      p = h / (count - 1)\n      q = p / dRatio\n    }\n    const hCount = Math.ceil(w / q) + 1\n    const vCount = Math.ceil(h / p) + 1\n    const v = 0.5\n    return (\n      <Group>\n        {this.renderSelf(tincture2)}\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            ctx.beginPath()\n            ctx.translate(this.bounds.left, this.bounds.top)\n            for (let row = 0; row < vCount; row++) {\n              for (let col = 0; col < hCount; col++) {\n                const x = col * q\n                const y = row * p\n                ctx.moveTo(x - (q / 2), y)\n                ctx.lineTo(x, y - (p / 2))\n                ctx.lineTo(x + (q / 2), y)\n                ctx.lineTo(x, y + (p / 2))\n                ctx.lineTo(x - (q / 2), y)\n                ctx.closePath()\n                if (type == LozengeType.Mascle) {\n                  ctx.moveTo(x - v * (q / 2), y)\n                  ctx.lineTo(x - v * (q / 2), y)\n                  ctx.lineTo(x, y + v * (p / 2))\n                  ctx.lineTo(x + v * (q / 2), y)\n                  ctx.lineTo(x, y - v * (p / 2))\n                  ctx.closePath()\n\n                  ctx.moveTo(x + q / 2 - v * (q / 2), y + p / 2)\n                  ctx.lineTo(x + q / 2 - v * (q / 2), y + p / 2)\n                  ctx.lineTo(x + q / 2, y + p / 2 + v * (p / 2))\n                  ctx.lineTo(x + q / 2 + v * (q / 2), y + p / 2)\n                  ctx.lineTo(x + q / 2, y + p / 2 - v * (p / 2))\n                  ctx.closePath()\n                } else if (type == LozengeType.Ruste) {\n                  ctx.moveTo(x, y)\n                  ctx.arc(x, y, v * q / 2, 0, Math.PI * 2, true)\n\n                  ctx.moveTo(x + q / 2, y + p / 2)\n                  ctx.arc(x + q / 2, y + p / 2, v * q / 2, 0, Math.PI * 2, false)\n                }\n              }\n            }\n          }}>\n          {this.renderSelf(tincture1)}\n        </Group>\n      </Group>\n    )\n  }\n\n  // Ordinary\n  visitPale(pale: Pale): void {\n    const chargesCount = this.assertChargesCount(\n      pale.charges, 5\n    )\n\n    const bounds = this.bounds\n    const escutcheon = this.escutcheon\n\n    const w = escutcheon.paleWidth\n    const h = bounds.height\n\n    const totalHeight = escutcheon.middleBase.y - escutcheon.middleChief.y\n    const chargeHeight = Math.min(\n      w * this.CONTENT_TO_SPACE_RATIO,\n      (totalHeight * this.CONTENT_TO_SPACE_RATIO) / chargesCount\n    )\n\n    const charges = this.renderInPale(\n      pale.charges,\n      chargeHeight,\n      new Rectangle(\n        escutcheon.middleChief.y,\n        escutcheon.fessPoint.x - totalHeight / 2,\n        escutcheon.middleBase.y,\n        escutcheon.fessPoint.x + totalHeight / 2,\n      ),\n      true,\n      true\n    )\n\n    this.value = (\n      <Group\n        clipX={bounds.centerHorizontal - w / 2}\n        clipY={bounds.top}\n        clipWidth={w}\n        clipHeight={h}\n      >\n        {this.renderSelf(pale.texture)}\n        {charges}\n      </Group >\n    )\n  }\n\n  visitFess(fess: Fess): void {\n    const chargesCount = this.assertChargesCount(\n      fess.charges, 5\n    )\n\n    const bounds = this.bounds\n    const escutcheon = this.escutcheon\n\n    const w = bounds.width\n    const h = escutcheon.fessHeight\n\n    const totalWidth = escutcheon.sinister.x - escutcheon.dexter.x\n    const chargeWidth = Math.min(\n      h * this.CONTENT_TO_SPACE_RATIO,\n      (totalWidth * this.CONTENT_TO_SPACE_RATIO) / chargesCount\n    )\n\n    const charges = this.renderInFess(\n      fess.charges,\n      chargeWidth,\n      new Rectangle(\n        escutcheon.fessPoint.y - totalWidth / 2,\n        escutcheon.dexter.x,\n        escutcheon.fessPoint.y + totalWidth / 2,\n        escutcheon.sinister.x\n      ),\n      true,\n      true\n    )\n\n    this.value = (\n      <Group\n        clipX={bounds.left}\n        clipY={escutcheon.fessPoint.y - h / 2}\n        clipWidth={w}\n        clipHeight={h}\n      >\n        {this.renderSelf(fess.texture)}\n        {charges}\n      </Group >\n    )\n  }\n\n  visitCross(cross: Cross): void {\n    const chargesCount = this.assertChargesCount(\n      cross.charges, 5\n    )\n\n    const bounds = this.bounds\n    const escutcheon = this.escutcheon\n    const fessPoint = this.escutcheon.fessPoint\n    const dimen = Math.min(\n      escutcheon.fessHeight, escutcheon.paleWidth\n    )\n    const halfDimen = dimen / 2\n    const chargeDimen = dimen * this.CONTENT_TO_SPACE_RATIO\n\n    const charges = this.renderInCross(\n      cross.charges,\n      chargeDimen,\n      bounds,\n      fessPoint\n    )\n\n    this.value = (\n      <Group\n        clipFunc={(ctx: Konva.Context) => {\n          ctx.moveTo(bounds.centerHorizontal - halfDimen, bounds.top)\n          ctx.lineTo(bounds.centerHorizontal + halfDimen, bounds.top)\n          ctx.lineTo(bounds.centerHorizontal + halfDimen, fessPoint.y - halfDimen)\n          ctx.lineTo(bounds.right, fessPoint.y - halfDimen)\n          ctx.lineTo(bounds.right, fessPoint.y + halfDimen)\n          ctx.lineTo(bounds.centerHorizontal + halfDimen, fessPoint.y + halfDimen)\n          ctx.lineTo(bounds.centerHorizontal + halfDimen, bounds.bottom)\n          ctx.lineTo(bounds.centerHorizontal - halfDimen, bounds.bottom)\n          ctx.lineTo(bounds.centerHorizontal - halfDimen, fessPoint.y + halfDimen)\n          ctx.lineTo(bounds.left, fessPoint.y + halfDimen)\n          ctx.lineTo(bounds.left, fessPoint.y - halfDimen)\n          ctx.lineTo(bounds.centerHorizontal - halfDimen, fessPoint.y - halfDimen)\n          ctx.closePath()\n        }}>\n        {this.renderSelf(cross.texture)}\n        {charges}\n      </Group>\n    )\n  }\n\n  visitBend(bend: Bend): void {\n    const chargesCount = this.assertChargesCount(\n      bend.charges, 5\n    )\n\n    const bounds = this.bounds\n    const escutcheon = this.escutcheon\n    const fessPoint = escutcheon.fessPoint\n\n    const w = bounds.width\n    const h = bounds.height\n    const t = Math.min(w, h * this.T)\n    const dimen = Math.SQRT2 * (w + h) / 2\n\n    const f = bend.sinister ? escutcheon.bendSinisterFunction : escutcheon.bendFunction\n    const b = f(0)\n    const a = (f(1) - b) / 1\n    const q = Math.atan(a)\n\n    // Initial line calculations\n    let startPoint = bend.sinister ? escutcheon.dexterBase : escutcheon.dexterChief\n    let endPoint = bend.sinister ? escutcheon.sinisterChief : escutcheon.sinisterBase\n    const hor = Math.min(\n      Math.abs(fessPoint.x - startPoint.x),\n      Math.abs(fessPoint.x - endPoint.x)\n    )\n    const vert = Math.min(\n      Math.abs(fessPoint.y - startPoint.y),\n      Math.abs(fessPoint.y - endPoint.y)\n    )\n\n    const chargesRect = new Rectangle(fessPoint.y - vert, fessPoint.x - hor, fessPoint.y + vert, fessPoint.x + hor)\n    const chargeSize = Math.min(\n      t * this.CONTENT_TO_SPACE_RATIO,\n      (chargesRect.diagonal * this.CONTENT_TO_SPACE_RATIO) / chargesCount\n    )\n    const charges = this.renderInBend(\n      bend.charges,\n      chargeSize * Math.SQRT2 / 2,\n      chargesRect,\n      bend.sinister,\n      true,\n      true,\n    )\n\n    this.value = (\n      <Group>\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            ctx.save()\n            ctx.translate(\n              fessPoint.x,\n              fessPoint.y\n            )\n            ctx.rotate(q)\n            ctx.rect(-dimen / 2, -t / 2, dimen, t)\n            ctx.restore()\n          }}\n        >\n          {this.renderSelf(bend.texture)}\n        </Group>\n        {charges}\n      </Group>\n    )\n  }\n\n  visitSaltire(saltire: Saltire): void {\n    const bounds = this.bounds\n    const escutcheon = this.escutcheon\n    const fessPoint = escutcheon.fessPoint\n\n    const w = bounds.width\n    const h = bounds.height\n    const t = Math.min(w, h * this.T)\n    const dimen = Math.SQRT2 * (w + h) / 2\n\n    const q1 = slope(escutcheon.bendFunction)\n    const q2 = slope(escutcheon.bendSinisterFunction)\n\n    const chargesCount = this.assertChargesCount(\n      saltire.charges, 5\n    )\n    const chargeSize = 0.5 * Math.SQRT2 * t * this.CONTENT_TO_SPACE_RATIO\n\n    const hor = Math.min(\n      fessPoint.distanceX(escutcheon.dexterChief),\n      fessPoint.distanceX(escutcheon.dexterBase),\n      fessPoint.distanceX(escutcheon.sinisterChief),\n      fessPoint.distanceX(escutcheon.sinisterBase),\n    )\n    const vert = Math.min(\n      fessPoint.distanceY(escutcheon.dexterChief),\n      fessPoint.distanceY(escutcheon.dexterBase),\n      fessPoint.distanceY(escutcheon.sinisterChief),\n      fessPoint.distanceY(escutcheon.sinisterBase),\n    )\n    const charges = this.renderInSaltire(\n      saltire.charges,\n      chargeSize,\n      new Rectangle(\n        fessPoint.y - vert, fessPoint.x - hor, fessPoint.y + vert, fessPoint.x + hor\n      )\n    )\n\n    this.value = (\n      <Group>\n        <Group\n          clipFunc={(ctx: Konva.Context) => {\n            ctx.save()\n            ctx.translate(\n              fessPoint.x,\n              fessPoint.y\n            )\n            ctx.rotate(q1)\n            ctx.rect(-dimen / 2, -t / 2, dimen, t)\n            ctx.restore()\n            ctx.save()\n            ctx.translate(\n              fessPoint.x,\n              fessPoint.y\n            )\n            ctx.rotate(q2)\n            ctx.rect(-dimen / 2, -t / 2, dimen, t)\n            ctx.restore()\n          }}\n        >\n          {this.renderSelf(saltire.texture)}\n        </Group>\n        {charges}\n      </Group>\n    )\n  }\n\n  // Charge group\n  private renderInPale(\n    charges: Charge[],\n    chargeSize: number,\n    rect: Rectangle,\n    startPadding: boolean,\n    endPadding: boolean\n  ) {\n    const chargesCount = charges.length\n    const height = rect.height\n    if (height / chargesCount < chargeSize) {\n      console.error(\"Cannot render \" + chargesCount + \" charges of size \" + chargeSize + \" on \" + height + \" pale\")\n      return\n    }\n    let spacersCount = chargesCount - 1\n    if (startPadding) {\n      spacersCount++\n    }\n    if (endPadding) {\n      spacersCount++\n    }\n    const spacerHeight = (height - chargeSize * chargesCount) / spacersCount\n\n    const result = []\n    for (let i = 0; i < chargesCount; i++) {\n      const x = rect.centerHorizontal - chargeSize / 2//rect.left + (startPadding ? spacerWidth : 0) + chargeSize / 2 + i * (spacerWidth + chargeSize) - chargeSize / 2\n      const y = rect.top + + (startPadding ? spacerHeight : 0) + chargeSize / 2 + i * (spacerHeight + chargeSize) - chargeSize / 2\n      result.push(\n        <Group\n          x={x}\n          y={y}>\n          {this.renderSelf(charges[i], chargeSize, chargeSize)}\n        </Group>\n      )\n    }\n\n    return result\n  }\n\n  private renderInFess(\n    charges: Charge[],\n    chargeSize: number,\n    rect: Rectangle,\n    startPadding: boolean,\n    endPadding: boolean\n  ) {\n    const chargesCount = charges.length\n    const width = rect.width\n    if (width / chargesCount < chargeSize) {\n      console.error(\"Cannot render \" + chargesCount + \" charges of size \" + chargeSize + \" on \" + width + \" fess\")\n      return\n    }\n    let spacersCount = chargesCount - 1\n    if (startPadding) {\n      spacersCount++\n    }\n    if (endPadding) {\n      spacersCount++\n    }\n    const spacerWidth = (width - chargeSize * chargesCount) / spacersCount\n\n    const result = []\n    for (let i = 0; i < chargesCount; i++) {\n      const x = rect.left + (startPadding ? spacerWidth : 0) + chargeSize / 2 + i * (spacerWidth + chargeSize) - chargeSize / 2\n      const y = rect.centerVertical - chargeSize / 2\n      result.push(\n        <Group\n          x={x}\n          y={y}>\n          {this.renderSelf(charges[i], chargeSize, chargeSize)}\n        </Group>\n      )\n    }\n\n    return result\n  }\n\n  private renderInCross(\n    charges: Charge[],\n    chargeSize: number,\n    rect: Rectangle,\n    center: Point\n  ) {\n    const chargesCount = charges.length\n    const dexter = new Point(\n      (center.x + rect.left) / 2, center.y\n    )\n    const sinister = new Point(\n      (center.x + rect.right) / 2, center.y\n    )\n    const chief = new Point(\n      center.x, (center.y + rect.top) / 2\n    )\n    const base = new Point(\n      center.x, (center.y + rect.bottom) / 2\n    )\n\n    let points: Point[] = []\n    if (chargesCount === 1) {\n      points = [center]\n    } else if (chargesCount === 2) {\n      points = [dexter, sinister]\n    } else if (chargesCount === 3) {\n      points = [dexter, sinister, chief]\n    } else if (chargesCount === 4) {\n      points = [dexter, sinister, chief, base]\n    } else if (chargesCount === 5) {\n      points = [center, dexter, sinister, chief, base]\n    }\n\n    return points.map((point, index) => {\n      return (\n        < Group\n          x={point.x - chargeSize / 2}\n          y={point.y - chargeSize / 2} >\n          {this.renderSelf(charges[index], chargeSize, chargeSize)}\n        </Group >\n      )\n    })\n  }\n\n  private renderInBend(\n    charges: Charge[],\n    chargeSize: number,\n    rect: Rectangle,\n    sinister: boolean,\n    startPadding: boolean,\n    endPadding: boolean\n  ) {\n    const chargesCount = charges.length\n    const diagonal = rect.diagonal\n    const chargeDiagonal = chargeSize * Math.SQRT2\n    if (diagonal / chargesCount < chargeDiagonal) {\n      console.error(\"Cannot render \" + chargesCount + \" charges of size \" + chargeSize + \" on \" + diagonal + \" bend\")\n      return\n    }\n    const dX = (rect.right - rect.left) / diagonal\n    const dY = (sinister ? -1 : 1) * (rect.bottom - rect.top) / diagonal\n    let spacersCount = chargesCount - 1\n    if (startPadding) {\n      spacersCount++\n    }\n    if (endPadding) {\n      spacersCount++\n    }\n    const spacerDiagonal = (diagonal - (chargeDiagonal * chargesCount)) / spacersCount\n\n    const result = []\n    for (let i = 0; i < chargesCount; i++) {\n      const d = i * (spacerDiagonal + chargeDiagonal) + (startPadding ? spacerDiagonal : 0) + chargeDiagonal / 2\n      const x = rect.left + d * dX - chargeSize / 2\n      const y = (sinister ? rect.bottom : rect.top) + d * dY - chargeSize / 2\n      result.push(\n        <Group\n          x={x}\n          y={y}>\n          {this.renderSelf(charges[i], chargeSize, chargeSize)}\n        </Group>\n      )\n    }\n\n    return result\n  }\n\n  private renderInSaltire(\n    charges: Charge[],\n    chargeSize: number,\n    rect: Rectangle\n  ) {\n    const chargesCount = charges.length\n    const center = rect.center\n    const dexterChief = new Point(\n      (center.x + rect.left) / 2, (center.y + rect.top) / 2\n    )\n    const dexterBase = new Point(\n      (center.x + rect.left) / 2, (center.y + rect.bottom) / 2\n    )\n    const sinisterChief = new Point(\n      (center.x + rect.right) / 2, (center.y + rect.top) / 2\n    )\n    const sinisterBase = new Point(\n      (center.x + rect.right) / 2, (center.y + rect.bottom) / 2\n    )\n\n    let points: Point[] = []\n    if (chargesCount === 1) {\n      points = [center]\n    } else if (chargesCount === 2) {\n      points = [dexterChief, sinisterChief]\n    } else if (chargesCount === 3) {\n      points = [center, dexterChief, sinisterChief]\n    } else if (chargesCount === 4) {\n      points = [dexterChief, sinisterChief, dexterBase, sinisterBase]\n    } else if (chargesCount === 5) {\n      points = [center, dexterChief, sinisterChief, dexterBase, sinisterBase]\n    }\n\n    return points.map((point, index) => {\n      return (\n        < Group\n          x={point.x - chargeSize / 2}\n          y={point.y - chargeSize / 2} >\n          {this.renderSelf(charges[index], chargeSize, chargeSize)}\n        </Group >\n      )\n    })\n  }\n\n  visitInFess(inFess: InFess): void {\n    const w = this.viewportWidth\n    const h = this.viewportHeight\n    const dimen = Math.min(w, h)\n    const rect = new Rectangle(\n      (h - dimen) / 2, (w - dimen) / 2,\n      (h + dimen) / 2, (w + dimen) / 2\n    )\n    const chargeSize = (w * this.CONTENT_TO_SPACE_RATIO) / inFess.charges.length\n\n    this.value = this.renderInFess(\n      inFess.charges,\n      chargeSize,\n      rect,\n      false,\n      false\n    )\n  }\n\n  visitInPale(inPale: InPale): void {\n    const w = this.viewportWidth\n    const h = this.viewportHeight\n    const dimen = Math.min(w, h)\n    const rect = new Rectangle(\n      (h - dimen) / 2, (w - dimen) / 2,\n      (h + dimen) / 2, (w + dimen) / 2\n    )\n    const chargeSize = (h * this.CONTENT_TO_SPACE_RATIO) / inPale.charges.length\n\n    this.value = this.renderInPale(\n      inPale.charges,\n      chargeSize,\n      rect,\n      false,\n      false\n    )\n  }\n\n  visitInBend(inBend: InBend): void {\n    const w = this.viewportWidth\n    const h = this.viewportHeight\n    const dimen = Math.min(w, h)\n    const rect = new Rectangle(\n      (h - dimen) / 2, (w - dimen) / 2,\n      (h + dimen) / 2, (w + dimen) / 2\n    )\n    const chargeSize = (rect.diagonal * this.CONTENT_TO_SPACE_RATIO) / inBend.charges.length\n\n    this.value = this.renderInBend(\n      inBend.charges,\n      chargeSize,\n      rect,\n      inBend.sinister,\n      false,\n      false\n    )\n  }\n\n  // Mobile Subordinary\n  visitRoundel(roundel: Roundel): void {\n    const w = this.viewportWidth\n    const h = this.viewportHeight\n    const dimen = Math.min(w, h)\n\n    this.value = (\n      <Group\n        clipFunc={(ctx: Konva.Context) => {\n          ctx.arc(\n            w / 2, h / 2,\n            dimen / 2,\n            0, Math.PI * 2,\n            false\n          )\n        }}>\n        {this.renderSelf(roundel.tincture)}\n      </Group>\n    )\n  }\n\n  visitBillet(billet: Billet): void {\n    const w = this.viewportWidth\n    const h = this.viewportHeight\n    const dimen = Math.min(w, h)\n\n    this.value = (\n      <Group\n        clipFunc={(ctx: Konva.Context) => {\n          ctx.rect(\n            (w - dimen * 0.5) / 2,\n            (h - dimen) / 2,\n            0.5 * dimen,\n            dimen\n          )\n        }}>\n        {this.renderSelf(billet.tincture)}\n      </Group>\n    )\n  }\n\n  visitLozenge(lozenge: Lozenge): void {\n    const w = this.viewportWidth\n    const h = this.viewportHeight\n    const dimen = Math.min(w, h) / 2\n    const dimen1 = lozenge.ratio > 1 ? dimen / lozenge.ratio : dimen\n    const dimen2 = lozenge.ratio > 1 ? dimen : dimen * lozenge.ratio\n    const x = w / 2\n    const y = h / 2\n    const v = 0.5\n\n    this.value = (\n      <Group\n        clipFunc={(ctx: Konva.Context) => {\n          ctx.moveTo(x, y - dimen2)\n          ctx.lineTo(x + dimen1, y)\n          ctx.lineTo(x, y + dimen2)\n          ctx.lineTo(x - dimen1, y)\n          ctx.closePath()\n          if (lozenge.type === LozengeType.Mascle) {\n            ctx.moveTo(x, y - dimen2 * v)\n            ctx.lineTo(x - dimen1 * v, y)\n            ctx.lineTo(x, y + dimen2 * v)\n            ctx.lineTo(x + dimen1 * v, y)\n            ctx.closePath()\n          } else if (lozenge.type === LozengeType.Ruste) {\n            ctx.arc(x, y, Math.min(dimen1, dimen2) * v, 0, Math.PI * 2, true)\n          }\n        }}>\n        {this.renderSelf(lozenge.tincture)}\n      </Group>\n    )\n  }\n\n  visitMullet(mullet: Mullet): void {\n    const w = this.viewportWidth\n    const h = this.viewportHeight\n    const dimen = Math.min(w, h) / 2\n\n    this.value = (\n      <Group\n        clipFunc={(ctx: Konva.Context) => {\n          let x, y\n          let r = Math.PI / 2 * 3\n          const step = Math.PI / mullet.points\n          ctx.beginPath()\n          for (let i = 0; i < mullet.points; i++) {\n            x = w / 2 + Math.cos(r) * dimen\n            y = h / 2 + Math.sin(r) * dimen\n            ctx.lineTo(x, y)\n            r += step\n            x = w / 2 + Math.cos(r) * dimen / 2\n            y = h / 2 + Math.sin(r) * dimen / 2\n            ctx.lineTo(x, y)\n            r += step\n          }\n          if (mullet.pierced) {\n            ctx.moveTo(w / 2, h / 2)\n            ctx.arc(w / 2, h / 2, dimen / 4, 0, Math.PI * 2, true)\n          }\n        }}>\n        {this.renderSelf(mullet.tincture)}\n      </Group>\n    )\n  }\n\n  visitStandardTincture(standardTincture: StandardTincture): void {\n    let hex = standardTincture.getColorHex(this.crestPalette)\n\n    this.value = (\n      <Rect\n        x={0}\n        y={0}\n        width={this.viewportWidth}\n        height={this.viewportHeight}\n        fill={hex}\n      />\n    )\n  }\n\n  private assertChargesCount(charges: Charge[], max: number): number {\n    if (charges.length > max) {\n      console.warn(\"Only up to \" + max + \" charges is supported!\")\n      console.warn(\"From \" + charges.length + \" only \" + max + \" will be used\")\n    }\n    return Math.min(charges.length, max)\n  }\n\n  private renderSelf(\n    visitable: Visitable<Renderable>,\n    width: number = this.viewportWidth,\n    height: number = this.viewportHeight,\n    escutcheon: Escutcheon = this.escutcheon\n  ): React.ReactNode {\n    let renderer = new PlainCrestRenderer(width, height, this.crestPalette, escutcheon)\n    return renderer.render(visitable)\n  }\n\n  private readonly T: number = 0.25\n  private readonly CONTENT_TO_SPACE_RATIO = 0.666\n}\n\nexport default PlainCrestRenderer\n","import React, { forwardRef, createRef, useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport Crest from './model/Crest'\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva'\nimport PlainCrestRenderer from './PlainCrestRenderer'\nimport Escutcheon from './model/escutcheon/Escutcheon'\nimport { useWindowSize } from './util/Hooks'\nimport { CrestPaletteContext } from './CrestPaletteContext'\nimport Konva from 'konva'\n\ntype CrestPreviewProps = {\n  crest: Crest\n  escutcheon: Escutcheon\n}\n\nexport const CrestPreview = forwardRef<Konva.Stage, CrestPreviewProps>(\n  (props, ref) => {\n    const crestPalette = React.useContext(CrestPaletteContext)\n\n    const containerRef = useRef<HTMLDivElement>(null)\n    const [windowWidth, windowHeight] = useWindowSize();\n    const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 })\n    const viewportSize = { width: 1000, height: 750 }\n\n    useLayoutEffect(() => {\n      if (containerRef.current) {\n        const parentWidth = containerRef.current.offsetWidth\n        setCanvasSize({\n          width: parentWidth,\n          height: 0.75 * parentWidth\n        })\n      }\n    }, [containerRef, windowWidth]);\n\n    const renderer = new PlainCrestRenderer(\n      viewportSize.width, viewportSize.height, crestPalette, props.escutcheon\n    )\n    const scale = canvasSize.width / viewportSize.width\n    return (\n      <div ref={containerRef}>\n        <Stage\n          ref={ref}\n          width={canvasSize.width}\n          height={canvasSize.height}\n          scale={{ x: scale, y: scale }}>\n          {renderer.render(props.crest)}\n        </Stage>\n      </div >\n    )\n  }\n)\n","import Crest from \"../model/Crest\";\nimport HeaterEscutcheon from \"../model/escutcheon/HeaterEscutcheon\";\nimport RectangleEscutcheon from \"../model/escutcheon/RectangleEscutcheon\";\nimport { PerBendDividedField, PerChevronDividedField, PerCrossDividedField, PerFessDividedField, PerPaleDividedField, PerPallDividedField, PerSaltireDividedField } from \"../model/field/DividedField\";\nimport SolidField from \"../model/field/SolidField\";\nimport { Billet, Lozenge, Mullet, Roundel } from \"../model/charge/MobileSubordinary\";\nimport { Bend, Cross, Fess, Ordinary, Pale, Saltire } from \"../model/ordinary/Ordinary\";\nimport { Barry, Bendy, Chequy, Fusilly, Lozengy, Paly, Ruste } from \"../model/texture/VariationTexture\";\nimport { InBend, InFess, InPale } from \"../model/charge/GroupCharge\";\nimport { StandardTincture } from \"../model/texture/Tincture\";\nimport CircleEscutcheon from \"../model/escutcheon/CircleEscutcheon\";\nimport Texture from \"../model/texture/Texture\";\nimport { Charge } from \"../model/charge/Charge\";\n\n/*export interface Visitor extends\n  CrestVisitor, ChargeVisitor, FieldVisitor, EscutcheonVisitor, TextureVisitor, OrdinaryVisitor {\n\n}*/\n\nexport interface CrestVisitor {\n  visitCrest(crest: Crest): void\n}\n\nexport interface FieldVisitor {\n  visitSolidField(field: SolidField): void\n  visitPerFessDividedField(field: PerFessDividedField): void\n  visitPerPaleDividedField(field: PerPaleDividedField): void\n  visitPerBendDividedField(field: PerBendDividedField): void\n  visitPerSaltireDividedField(field: PerSaltireDividedField): void\n  visitPerCrossDividedField(field: PerCrossDividedField): void\n  visitPerChevronDividedField(field: PerChevronDividedField): void\n  visitPerPallDividedField(field: PerPallDividedField): void\n}\n\nexport interface EscutcheonVisitor {\n  visitHeaterEscutcheon(escutcheon: HeaterEscutcheon): void\n  visitRectangleEscutcheon(escutcheon: RectangleEscutcheon): void\n  visitCircleEscutcheon(escutcheon: CircleEscutcheon): void\n}\n\nexport interface OrdinaryVisitor {\n  visitPale(pale: Pale): void\n  visitFess(fess: Fess): void\n  visitCross(cross: Cross): void\n  visitBend(bend: Bend): void\n  visitSaltire(saltire: Saltire): void\n}\n\nexport interface ChargeVisitor {\n  // Mobile subordinary\n  visitRoundel(roundel: Roundel): void\n  visitBillet(billet: Billet): void\n  visitLozenge(lozenge: Lozenge): void\n  visitMullet(mullet: Mullet): void\n  // Group\n  visitInFess(inFess: InFess): void\n  visitInPale(inPale: InPale): void\n  visitInBend(inBend: InBend): void\n}\n\nexport interface TinctureVisitor {\n  visitStandardTincture(standardTincture: StandardTincture): void\n}\n\nexport interface TextureVisitor extends TinctureVisitor {\n  visitBarry(barry: Barry): void\n  visitPaly(paly: Paly): void\n  visitBendy(bendy: Bendy): void\n  visitChequy(chequy: Chequy): void\n  visitLozengy(lozengy: Lozengy): void\n  visitFusilly(fusilly: Fusilly): void\n  visitRuste(ruste: Ruste): void\n}\n\nexport abstract class BaseTextureVisitor implements TextureVisitor {\n  visitStandardTincture(standardTincture: StandardTincture): void { }\n  visitBarry(barry: Barry): void { }\n  visitPaly(paly: Paly): void { }\n  visitBendy(bendy: Bendy): void { }\n  visitChequy(chequy: Chequy): void { }\n  visitLozengy(lozengy: Lozengy): void { }\n  visitFusilly(fusilly: Fusilly): void { }\n  visitRuste(ruste: Ruste): void { }\n}\n\nexport interface Visitable<VISITOR_TYPE> {\n  accept(visitor: VISITOR_TYPE): void;\n}\n\nexport class CloneOrdinaryVisitor implements OrdinaryVisitor {\n\n  private result!: Ordinary\n\n  private texture!: Texture;\n  private charges!: Charge[];\n\n  clone(\n    ordinary: Ordinary,\n    texture: Texture = ordinary.texture,\n    charges: Charge[] = ordinary.charges\n  ): Ordinary {\n    this.texture = texture\n    this.charges = charges\n\n    ordinary.accept(this)\n\n    return this.result\n  }\n\n  visitPale(pale: Pale): void {\n    this.result = new Pale(this.texture, this.charges)\n  }\n  visitFess(fess: Fess): void {\n    this.result = new Fess(this.texture, this.charges)\n  }\n  visitCross(cross: Cross): void {\n    this.result = new Cross(this.texture, this.charges)\n  }\n  visitBend(bend: Bend): void {\n    this.result = new Bend(this.texture, this.charges, bend.sinister)\n  }\n  visitSaltire(saltire: Saltire): void {\n    this.result = new Saltire(this.texture, this.charges)\n  }\n\n}\n","import { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, GridList, GridListTile, GridListTileBar, Typography, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Bend, Cross, Fess, Ordinary, Pale, Saltire } from \"../model/ordinary/Ordinary\";\nimport Texture from \"../model/texture/Texture\";\nimport { SableTincture } from \"../model/texture/Tincture\";\nimport { useNonInitialEffect } from \"../util/Hooks\";\nimport { CloneOrdinaryVisitor, OrdinaryVisitor } from \"../util/Visitor\";\nimport { TextureToolsPanel } from \"./TextureToolsPanel\";\n\ntype OrdinaryToolsPanelProps = {\n  ordinary: Ordinary\n  onChange?: (ordinary: Ordinary) => void\n}\n\nexport const OrdinaryToolsPanel = (props: OrdinaryToolsPanelProps) => {\n  const theme = useTheme()\n\n  const [ordinary, setOrdinary] = React.useState(props.ordinary)\n  const [galleryOpen, setGalleryOpen] = React.useState(false)\n\n  const handleCloseGallery = () => {\n    setGalleryOpen(false);\n  };\n\n  useNonInitialEffect(() => {\n    props.onChange ?.(ordinary)\n  }, [ordinary])\n\n  const options = getOptions()\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setGalleryOpen(true)\n        }}\n      >\n        Open\n      </Button>\n      <TextureToolsPanel\n        texture={ordinary.texture}\n        onChange={(texture: Texture) => {\n          let clonedOrdinary = new CloneOrdinaryVisitor()\n            .clone(ordinary, texture)\n\n          setOrdinary(clonedOrdinary)\n        }}\n      />\n      <Dialog\n        open={galleryOpen}\n        onClose={handleCloseGallery}\n        scroll=\"paper\"\n      >\n        <DialogTitle>Ordinary</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              display: \"flex\",\n              flexFlow: \"row wrap\",\n              justifyContent: \"center\",\n            }}\n          >\n            {options.map((option, index) => {\n              return (\n                <GalleryItem\n                  label={option.label}\n                  onClick={() => {\n                    setOrdinary(option.factoryFunc(ordinary.texture))\n                    handleCloseGallery()\n                  }}\n                />\n              )\n            })}\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseGallery} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\ntype OrdinaryOption = {\n  label: string,\n  factoryFunc: (texture: Texture) => Ordinary,\n}\n\nfunction getOptions(): OrdinaryOption[] {\n  return [\n    {\n      label: \"Pale\",\n      factoryFunc: (texture: Texture) => {\n        return new Pale(\n          texture, []\n        )\n      },\n    },\n    {\n      label: \"Fess\",\n      factoryFunc: (texture: Texture) => {\n        return new Fess(\n          texture, []\n        )\n      },\n    },\n    {\n      label: \"Cross\",\n      factoryFunc: (texture: Texture) => {\n        return new Cross(\n          texture, []\n        )\n      },\n    },\n    {\n      label: \"Bend\",\n      factoryFunc: (texture: Texture) => {\n        return new Bend(\n          texture, [], false\n        )\n      },\n    },\n    {\n      label: \"Bend sinister\",\n      factoryFunc: (texture: Texture) => {\n        return new Bend(\n          texture, [], true\n        )\n      },\n    },\n    {\n      label: \"Saltire\",\n      factoryFunc: (texture: Texture) => {\n        return new Saltire(\n          texture, []\n        )\n      },\n    },\n  ]\n}\n\ntype GalleryItemProps = {\n  label: string,\n  size?: number\n  onClick?: () => void\n}\n\nconst GalleryItem = (props: GalleryItemProps) => {\n  const theme = useTheme()\n\n  const size = props.size || theme.spacing(16)\n\n  return (\n    <GridListTile\n      style={{\n        width: size,\n        height: size,\n        margin: theme.spacing(0.5),\n      }}\n      component=\"div\"\n      onClick={() => {\n        props.onClick ?.()\n      }}>\n      <img src={`https://via.placeholder.com/${size}x${size}.png?text=${props.label}`} />\n      <GridListTileBar\n        title={props.label}\n      />\n    </GridListTile>\n  )\n}\n","import React from \"react\";\nimport { Ordinary, Pale, Saltire } from \"../model/ordinary/Ordinary\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\nimport { useNonInitialEffect } from \"../util/Hooks\";\nimport { GulesTincture, randomTincture } from \"../model/texture/Tincture\";\nimport { OrdinaryToolsPanel } from \"./OrdinaryToolsPanel\";\n\ntype OrdinariesToolsPanelProps = {\n  ordinaries: Ordinary[]\n  onChange?: (ordinaries: Ordinary[]) => void\n}\n\nexport const OrdinariesToolsPanel = (props: OrdinariesToolsPanelProps) => {\n  const [ordinaries, setOrdinaries] = React.useState(props.ordinaries)\n  const [selectedIndex, setSelectedIndex] = React.useState(-1)\n\n  useNonInitialEffect(() => {\n    props.onChange ?.(ordinaries)\n  }, [ordinaries])\n\n  const handleDelete = (index: number) => {\n    const newOrdinaries = [...ordinaries]\n    newOrdinaries.splice(index, 1)\n    setOrdinaries(newOrdinaries)\n  }\n\n  const handleAdd = () => {\n    const newOrdinary = new Pale(randomTincture())\n    const newOrdinaries = [...ordinaries]\n    newOrdinaries.push(newOrdinary)\n    setOrdinaries(newOrdinaries)\n  }\n\n  const listItems = ordinaries.map((ordinary, index) => {\n    const label = \"Ordinary\" + \" \" + (index + 1)\n    return (\n      <ListItem\n        button\n        selected={selectedIndex === index}\n        onClick={() =>\n          setSelectedIndex(index)\n        }\n      >\n        <ListItemText primary={label} />\n        <ListItemSecondaryAction>\n          <IconButton\n            edge=\"end\"\n            onClick={() => {\n              handleDelete(index)\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  })\n\n  let content = null\n  if (selectedIndex >= 0 && selectedIndex < ordinaries.length) {\n    content = (\n      <OrdinaryToolsPanel\n        key={selectedIndex}\n        ordinary={ordinaries[selectedIndex]}\n        onChange={(ordinary: Ordinary) => {\n          const newOrdinaries = [...ordinaries]\n          newOrdinaries[selectedIndex] = ordinary\n          setOrdinaries(newOrdinaries)\n        }}\n      />\n    )\n  }\n\n  return (\n    <>\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        {listItems}\n        <ListItem button>\n          <ListItemIcon\n            style={{\n              justifyContent: \"center\",\n              flexGrow: 1,\n            }}\n            onClick={() => {\n              handleAdd()\n            }}\n          >\n            <AddIcon />\n          </ListItemIcon>\n        </ListItem>\n      </List>\n      {content}\n    </>\n  )\n}\n","import { Accordion, AccordionDetails, AccordionSummary, Button, ButtonGroup, Container, createStyles, FormControl, Grid, IconButton, InputLabel, makeStyles, MenuItem, Paper, Select, Theme, Typography } from \"@material-ui/core\"\nimport React, { useState } from \"react\"\nimport AspectRatio from \"./AspectRatio\"\nimport { InBend } from \"./model/charge/GroupCharge\"\nimport { Roundel } from \"./model/charge/MobileSubordinary\"\nimport Crest from \"./model/Crest\"\nimport Escutcheon from \"./model/escutcheon/Escutcheon\"\nimport HeaterEscutcheon from \"./model/escutcheon/HeaterEscutcheon\"\nimport SolidField from \"./model/field/SolidField\"\nimport { Ordinary, Saltire } from \"./model/ordinary/Ordinary\"\nimport { Barry, Bendy, Chequy } from \"./model/texture/VariationTexture\"\nimport logo from './logo.svg'\nimport RectangleEscutcheon from \"./model/escutcheon/RectangleEscutcheon\"\nimport { FieldToolsPanel } from \"./ui/FieldToolsPanel\"\nimport Field from \"./model/field/Field\"\nimport { PerFessDividedField } from \"./model/field/DividedField\"\nimport { TinctureToolsPanel } from \"./ui/TinctureToolsPanel\"\nimport { TextureToolsPanel } from \"./ui/TextureToolsPanel\"\nimport Texture from \"./model/texture/Texture\"\nimport { CrestPaletteContext } from \"./CrestPaletteContext\"\nimport { PastelCrestPalette } from \"./CrestPalette\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport SaveIcon from '@material-ui/icons/Save'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport { EscutcheonToolsPanel } from \"./ui/EscutcheonToolsPanel\"\nimport { AzureTincture, GulesTincture, OrTincture, SableTincture, Tincture, VertTincture } from \"./model/texture/Tincture\"\nimport { CrestPreview } from \"./CrestPreview\"\nimport Konva from \"konva\"\nimport { OrdinariesToolsPanel } from \"./ui/OrdinariesToolsPanel\"\n\ntype CrestEditorProps = {}\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    toolsPanel: {\n      flexDirection: \"column\",\n      // Direct children\n      '& > *': {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n      }\n    },\n    tinctureItem: {\n      width: \"30%\",\n      minWidth: 100,\n      margin: theme.spacing(0.5),\n      '& div': {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      }\n    },\n  }),\n);\n\nexport const CrestEditor = (props: CrestEditorProps) => {\n  const crestPalette = new PastelCrestPalette()\n  const classes = useStyles()\n\n  const [escutcheon, setEscutcheon] = useState<Escutcheon>(\n    new HeaterEscutcheon(200)\n  )\n  const [crest, setCrest] = useState<Crest>(\n    new Crest(\n      new PerFessDividedField(\n        new Chequy(\n          VertTincture,\n          AzureTincture,\n          4,\n        ),\n        OrTincture,\n      ),\n      [\n        new Saltire(\n          GulesTincture,\n        )\n      ]\n    )\n  )\n  const stageRef = React.createRef<Konva.Stage>()\n\n  const handleEscutcheonChange = (escutcheon: Escutcheon) => {\n    console.log(\"Escutcheon changed\")\n    setEscutcheon(escutcheon)\n  }\n  const handleFieldChange = (field: Field) => {\n    console.log(\"Field changed\")\n    setCrest(new Crest(\n      field,\n      crest.ordinaries\n    ))\n  }\n  const handleOrdinariesChange = (ordinaries: Ordinary[]) => {\n    console.log(\"Ordinaries changed\")\n    setCrest(new Crest(\n      crest.field,\n      ordinaries\n    ))\n  }\n\n  const handleExport = () => {\n    if (stageRef.current) {\n      const uri = stageRef.current.toDataURL()\n      var link = document.createElement('a')\n      link.download = \"crest.png\"\n      link.href = uri\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    }\n  }\n\n  return (\n    <Container >\n      <CrestPaletteContext.Provider value={new PastelCrestPalette()}>\n        <div className={classes.root}>\n          <Grid container spacing={1}>\n            <Grid item xs={8}>\n              <Paper className={classes.paper}>\n                <CrestPreview ref={stageRef} crest={crest} escutcheon={escutcheon} />\n              </Paper>\n            </Grid>\n            <Grid item xs={4}>\n              <Paper className={classes.paper}>\n                <ButtonGroup color=\"primary\">\n                  <Button\n                    disabled\n                  >\n                    <SaveIcon />\n                  </Button>\n                  <Button\n                    onClick={() => { handleExport() }}\n                  >\n                    <GetAppIcon />\n                  </Button>\n                </ButtonGroup>\n                <Accordion>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography>Escutcheon</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails className={classes.toolsPanel}>\n                    <EscutcheonToolsPanel escutcheon={escutcheon} onChange={handleEscutcheonChange} />\n                  </AccordionDetails>\n                </Accordion>\n                <Accordion>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography>Field</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails className={classes.toolsPanel}>\n                    <FieldToolsPanel field={crest.field} onChange={handleFieldChange} />\n                  </AccordionDetails>\n                </Accordion>\n                <Accordion>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography>Ordinaries</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails className={classes.toolsPanel}>\n                    <OrdinariesToolsPanel ordinaries={crest.ordinaries} onChange={handleOrdinariesChange} />\n                  </AccordionDetails>\n                </Accordion>\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      </CrestPaletteContext.Provider>\n    </Container >\n  )\n}\n","import './App.css';\nimport React from 'react';\nimport { CrestEditor } from './CrestEditor';\n\nfunction App() {\n  return (\n    <div>\n      <CrestEditor />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}